Grammar

    0 $accept: program $end

    1 program: stmt_list

    2 stmt_list: stmt
    3          | stmt_list stmt

    4 stmt: ENDL
    5     | expr_list ENDL
    6     | func_stmt
    7     | proc_stmt
    8     | print
    9     | read
   10     | znach_value ENDL
   11     | decl

   12 expr: function_call
   13     | identifier '[' expr_list ']'
   14     | identifier
   15     | '(' expr ')'
   16     | INT_CONST
   17     | CHAR_CONST
   18     | STRING_CONST
   19     | DOUBLE_CONST
   20     | BOOL_CONST
   21     | expr ASSMNT expr
   22     | expr PLUS expr
   23     | expr MINUS expr
   24     | expr MUL expr
   25     | expr DIV expr
   26     | expr POW expr
   27     | expr GT expr
   28     | expr LT expr
   29     | expr GTEQ expr
   30     | expr LTEQ expr
   31     | expr NEQ expr
   32     | expr EQ expr
   33     | NET
   34     | DA
   35     | MINUS expr
   36     | NS

   37 function_call: identifier '(' expr_list ')'

   38 expr_list: expr
   39          | expr_list ',' expr

   40 identifier: ID

   41 decl: atomic_type enum_atomic_identifier_list ENDL
   42     | array_type enum_array_identifier_list ENDL

   43 enum_atomic_identifier_list: identifier
   44                            | enum_atomic_identifier_list ',' identifier

   45 enum_array_identifier_list: identifier '[' dimensions ']'
   46                           | enum_array_identifier_list ',' identifier '[' dimensions ']'

   47 func_stmt: ALG atomic_type identifier ENDL NACH ENDL stmt_list KON ENDL
   48          | ALG atomic_type identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

   49 proc_stmt: ALG identifier ENDL NACH ENDL stmt_list KON ENDL
   50          | ALG identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

   51 param_list: param
   52           | param_list ';' param

   53 znach_value: ZNACH ASSMNT expr

   54 param: arg_value
   55      | rez_value

   56 arg_value: ARG atomic_type enum_atomic_identifier_list
   57          | ARG array_type enum_array_identifier_list

   58 rez_value: REZ array_type enum_array_identifier_list
   59          | REZ atomic_type enum_atomic_identifier_list

   60 dimensions: INT_CONST ':' INT_CONST
   61           | INT_CONST ':' identifier
   62           | dimensions ',' INT_CONST ':' INT_CONST
   63           | dimensions ',' INT_CONST ':' identifier

   64 array_type: CELTAB
   65           | VESCHTAB
   66           | SIMTAB
   67           | LITTAB
   68           | LOGTAB

   69 atomic_type: CEL
   70            | VESCH
   71            | SIM
   72            | LIT
   73            | LOG

   74 print: VYVOD expr_list ENDL

   75 read: VVOD expr_list ENDL


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 37 48 50
')' (41) 15 37 48 50
',' (44) 39 44 46 62 63
':' (58) 60 61 62 63
';' (59) 52
'[' (91) 13 45 46
']' (93) 13 45 46
error (256)
BOOL_CONST (258) 20
INT_CONST (259) 16 60 61 62 63
STRING_CONST (260) 18
DOUBLE_CONST (261) 19
CHAR_CONST (262) 17
ID (263) 40
ALG (264) 47 48 49 50
ARG (265) 56 57
VVOD (266) 75
VESCH (267) 70
VESCHTAB (268) 65
VYVOD (269) 74
DA (270) 34
ZNACH (271) 53
KON (272) 47 48 49 50
LIT (273) 72
LITTAB (274) 67
LOG (275) 73
LOGTAB (276) 68
NACH (277) 47 48 49 50
NET (278) 33
NS (279) 36
REZ (280) 58 59
SIM (281) 71
SIMTAB (282) 66
CEL (283) 69
CELTAB (284) 64
ENDL (285) 4 5 10 41 42 47 48 49 50 74 75
ASSMNT (286) 21 53
EQ (287) 32
NEQ (288) 31
LTEQ (289) 30
GTEQ (290) 29
LT (291) 28
GT (292) 27
MINUS (293) 23 35
PLUS (294) 22
DIV (295) 25
MUL (296) 24
POW (297) 26
UMINUS (298)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
stmt_list (53)
    on left: 2 3, on right: 1 3 47 48 49 50
stmt (54)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
expr (55)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    30 31 32 33 34 35 36, on right: 15 21 22 23 24 25 26 27 28 29 30
    31 32 35 38 39 53
function_call (56)
    on left: 37, on right: 12
expr_list (57)
    on left: 38 39, on right: 5 13 37 39 74 75
identifier (58)
    on left: 40, on right: 13 14 37 43 44 45 46 47 48 49 50 61 63
decl (59)
    on left: 41 42, on right: 11
enum_atomic_identifier_list (60)
    on left: 43 44, on right: 41 44 56 59
enum_array_identifier_list (61)
    on left: 45 46, on right: 42 46 57 58
func_stmt (62)
    on left: 47 48, on right: 6
proc_stmt (63)
    on left: 49 50, on right: 7
param_list (64)
    on left: 51 52, on right: 48 50 52
znach_value (65)
    on left: 53, on right: 10
param (66)
    on left: 54 55, on right: 51 52
arg_value (67)
    on left: 56 57, on right: 54
rez_value (68)
    on left: 58 59, on right: 55
dimensions (69)
    on left: 60 61 62 63, on right: 45 46 62 63
array_type (70)
    on left: 64 65 66 67 68, on right: 42 57 58
atomic_type (71)
    on left: 69 70 71 72 73, on right: 41 47 48 56 59
print (72)
    on left: 74, on right: 8
read (73)
    on left: 75, on right: 9


state 0

    0 $accept: . program $end

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    SIM           shift, and go to state 20
    SIMTAB        shift, and go to state 21
    CEL           shift, and go to state 22
    CELTAB        shift, and go to state 23
    ENDL          shift, and go to state 24
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    program        go to state 27
    stmt_list      go to state 28
    stmt           go to state 29
    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 32
    identifier     go to state 33
    decl           go to state 34
    func_stmt      go to state 35
    proc_stmt      go to state 36
    znach_value    go to state 37
    array_type     go to state 38
    atomic_type    go to state 39
    print          go to state 40
    read           go to state 41


state 1

   20 expr: BOOL_CONST .

    $default  reduce using rule 20 (expr)


state 2

   16 expr: INT_CONST .

    $default  reduce using rule 16 (expr)


state 3

   18 expr: STRING_CONST .

    $default  reduce using rule 18 (expr)


state 4

   19 expr: DOUBLE_CONST .

    $default  reduce using rule 19 (expr)


state 5

   17 expr: CHAR_CONST .

    $default  reduce using rule 17 (expr)


state 6

   40 identifier: ID .

    $default  reduce using rule 40 (identifier)


state 7

   47 func_stmt: ALG . atomic_type identifier ENDL NACH ENDL stmt_list KON ENDL
   48          | ALG . atomic_type identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL
   49 proc_stmt: ALG . identifier ENDL NACH ENDL stmt_list KON ENDL
   50          | ALG . identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ID     shift, and go to state 6
    VESCH  shift, and go to state 9
    LIT    shift, and go to state 14
    LOG    shift, and go to state 16
    SIM    shift, and go to state 20
    CEL    shift, and go to state 22

    identifier   go to state 42
    atomic_type  go to state 43


state 8

   75 read: VVOD . expr_list ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 44
    identifier     go to state 33


state 9

   70 atomic_type: VESCH .

    $default  reduce using rule 70 (atomic_type)


state 10

   65 array_type: VESCHTAB .

    $default  reduce using rule 65 (array_type)


state 11

   74 print: VYVOD . expr_list ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 45
    identifier     go to state 33


state 12

   34 expr: DA .

    $default  reduce using rule 34 (expr)


state 13

   53 znach_value: ZNACH . ASSMNT expr

    ASSMNT  shift, and go to state 46


state 14

   72 atomic_type: LIT .

    $default  reduce using rule 72 (atomic_type)


state 15

   67 array_type: LITTAB .

    $default  reduce using rule 67 (array_type)


state 16

   73 atomic_type: LOG .

    $default  reduce using rule 73 (atomic_type)


state 17

   68 array_type: LOGTAB .

    $default  reduce using rule 68 (array_type)


state 18

   33 expr: NET .

    $default  reduce using rule 33 (expr)


state 19

   36 expr: NS .

    $default  reduce using rule 36 (expr)


state 20

   71 atomic_type: SIM .

    $default  reduce using rule 71 (atomic_type)


state 21

   66 array_type: SIMTAB .

    $default  reduce using rule 66 (array_type)


state 22

   69 atomic_type: CEL .

    $default  reduce using rule 69 (atomic_type)


state 23

   64 array_type: CELTAB .

    $default  reduce using rule 64 (array_type)


state 24

    4 stmt: ENDL .

    $default  reduce using rule 4 (stmt)


state 25

   35 expr: MINUS . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 47
    function_call  go to state 31
    identifier     go to state 33


state 26

   15 expr: '(' . expr ')'

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 48
    function_call  go to state 31
    identifier     go to state 33


state 27

    0 $accept: program . $end

    $end  shift, and go to state 49


state 28

    1 program: stmt_list .
    3 stmt_list: stmt_list . stmt

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    SIM           shift, and go to state 20
    SIMTAB        shift, and go to state 21
    CEL           shift, and go to state 22
    CELTAB        shift, and go to state 23
    ENDL          shift, and go to state 24
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    $default  reduce using rule 1 (program)

    stmt           go to state 50
    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 32
    identifier     go to state 33
    decl           go to state 34
    func_stmt      go to state 35
    proc_stmt      go to state 36
    znach_value    go to state 37
    array_type     go to state 38
    atomic_type    go to state 39
    print          go to state 40
    read           go to state 41


state 29

    2 stmt_list: stmt .

    $default  reduce using rule 2 (stmt_list)


state 30

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   38 expr_list: expr .

    ASSMNT  shift, and go to state 51
    EQ      shift, and go to state 52
    NEQ     shift, and go to state 53
    LTEQ    shift, and go to state 54
    GTEQ    shift, and go to state 55
    LT      shift, and go to state 56
    GT      shift, and go to state 57
    MINUS   shift, and go to state 58
    PLUS    shift, and go to state 59
    DIV     shift, and go to state 60
    MUL     shift, and go to state 61
    POW     shift, and go to state 62

    $default  reduce using rule 38 (expr_list)


state 31

   12 expr: function_call .

    $default  reduce using rule 12 (expr)


state 32

    5 stmt: expr_list . ENDL
   39 expr_list: expr_list . ',' expr

    ENDL  shift, and go to state 63
    ','   shift, and go to state 64


state 33

   13 expr: identifier . '[' expr_list ']'
   14     | identifier .
   37 function_call: identifier . '(' expr_list ')'

    '['  shift, and go to state 65
    '('  shift, and go to state 66

    $default  reduce using rule 14 (expr)


state 34

   11 stmt: decl .

    $default  reduce using rule 11 (stmt)


state 35

    6 stmt: func_stmt .

    $default  reduce using rule 6 (stmt)


state 36

    7 stmt: proc_stmt .

    $default  reduce using rule 7 (stmt)


state 37

   10 stmt: znach_value . ENDL

    ENDL  shift, and go to state 67


state 38

   42 decl: array_type . enum_array_identifier_list ENDL

    ID  shift, and go to state 6

    identifier                  go to state 68
    enum_array_identifier_list  go to state 69


state 39

   41 decl: atomic_type . enum_atomic_identifier_list ENDL

    ID  shift, and go to state 6

    identifier                   go to state 70
    enum_atomic_identifier_list  go to state 71


state 40

    8 stmt: print .

    $default  reduce using rule 8 (stmt)


state 41

    9 stmt: read .

    $default  reduce using rule 9 (stmt)


state 42

   49 proc_stmt: ALG identifier . ENDL NACH ENDL stmt_list KON ENDL
   50          | ALG identifier . '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 72
    '('   shift, and go to state 73


state 43

   47 func_stmt: ALG atomic_type . identifier ENDL NACH ENDL stmt_list KON ENDL
   48          | ALG atomic_type . identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

    ID  shift, and go to state 6

    identifier  go to state 74


state 44

   39 expr_list: expr_list . ',' expr
   75 read: VVOD expr_list . ENDL

    ENDL  shift, and go to state 75
    ','   shift, and go to state 64


state 45

   39 expr_list: expr_list . ',' expr
   74 print: VYVOD expr_list . ENDL

    ENDL  shift, and go to state 76
    ','   shift, and go to state 64


state 46

   53 znach_value: ZNACH ASSMNT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 77
    function_call  go to state 31
    identifier     go to state 33


state 47

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   35     | MINUS expr .

    $default  reduce using rule 35 (expr)


state 48

   15 expr: '(' expr . ')'
   21     | expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    ASSMNT  shift, and go to state 51
    EQ      shift, and go to state 52
    NEQ     shift, and go to state 53
    LTEQ    shift, and go to state 54
    GTEQ    shift, and go to state 55
    LT      shift, and go to state 56
    GT      shift, and go to state 57
    MINUS   shift, and go to state 58
    PLUS    shift, and go to state 59
    DIV     shift, and go to state 60
    MUL     shift, and go to state 61
    POW     shift, and go to state 62
    ')'     shift, and go to state 78


state 49

    0 $accept: program $end .

    $default  accept


state 50

    3 stmt_list: stmt_list stmt .

    $default  reduce using rule 3 (stmt_list)


state 51

   21 expr: expr ASSMNT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 79
    function_call  go to state 31
    identifier     go to state 33


state 52

   32 expr: expr EQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 80
    function_call  go to state 31
    identifier     go to state 33


state 53

   31 expr: expr NEQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 81
    function_call  go to state 31
    identifier     go to state 33


state 54

   30 expr: expr LTEQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 82
    function_call  go to state 31
    identifier     go to state 33


state 55

   29 expr: expr GTEQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 83
    function_call  go to state 31
    identifier     go to state 33


state 56

   28 expr: expr LT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 84
    function_call  go to state 31
    identifier     go to state 33


state 57

   27 expr: expr GT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 85
    function_call  go to state 31
    identifier     go to state 33


state 58

   23 expr: expr MINUS . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 86
    function_call  go to state 31
    identifier     go to state 33


state 59

   22 expr: expr PLUS . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 87
    function_call  go to state 31
    identifier     go to state 33


state 60

   25 expr: expr DIV . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 88
    function_call  go to state 31
    identifier     go to state 33


state 61

   24 expr: expr MUL . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 89
    function_call  go to state 31
    identifier     go to state 33


state 62

   26 expr: expr POW . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 90
    function_call  go to state 31
    identifier     go to state 33


state 63

    5 stmt: expr_list ENDL .

    $default  reduce using rule 5 (stmt)


state 64

   39 expr_list: expr_list ',' . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 91
    function_call  go to state 31
    identifier     go to state 33


state 65

   13 expr: identifier '[' . expr_list ']'

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 92
    identifier     go to state 33


state 66

   37 function_call: identifier '(' . expr_list ')'

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 93
    identifier     go to state 33


state 67

   10 stmt: znach_value ENDL .

    $default  reduce using rule 10 (stmt)


state 68

   45 enum_array_identifier_list: identifier . '[' dimensions ']'

    '['  shift, and go to state 94


state 69

   42 decl: array_type enum_array_identifier_list . ENDL
   46 enum_array_identifier_list: enum_array_identifier_list . ',' identifier '[' dimensions ']'

    ENDL  shift, and go to state 95
    ','   shift, and go to state 96


state 70

   43 enum_atomic_identifier_list: identifier .

    $default  reduce using rule 43 (enum_atomic_identifier_list)


state 71

   41 decl: atomic_type enum_atomic_identifier_list . ENDL
   44 enum_atomic_identifier_list: enum_atomic_identifier_list . ',' identifier

    ENDL  shift, and go to state 97
    ','   shift, and go to state 98


state 72

   49 proc_stmt: ALG identifier ENDL . NACH ENDL stmt_list KON ENDL

    NACH  shift, and go to state 99


state 73

   50 proc_stmt: ALG identifier '(' . param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ARG  shift, and go to state 100
    REZ  shift, and go to state 101

    param_list  go to state 102
    param       go to state 103
    arg_value   go to state 104
    rez_value   go to state 105


state 74

   47 func_stmt: ALG atomic_type identifier . ENDL NACH ENDL stmt_list KON ENDL
   48          | ALG atomic_type identifier . '(' param_list ')' ENDL NACH stmt_list KON ENDL

    ENDL  shift, and go to state 106
    '('   shift, and go to state 107


state 75

   75 read: VVOD expr_list ENDL .

    $default  reduce using rule 75 (read)


state 76

   74 print: VYVOD expr_list ENDL .

    $default  reduce using rule 74 (print)


state 77

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   53 znach_value: ZNACH ASSMNT expr .

    ASSMNT  shift, and go to state 51
    EQ      shift, and go to state 52
    NEQ     shift, and go to state 53
    LTEQ    shift, and go to state 54
    GTEQ    shift, and go to state 55
    LT      shift, and go to state 56
    GT      shift, and go to state 57
    MINUS   shift, and go to state 58
    PLUS    shift, and go to state 59
    DIV     shift, and go to state 60
    MUL     shift, and go to state 61
    POW     shift, and go to state 62

    $default  reduce using rule 53 (znach_value)


state 78

   15 expr: '(' expr ')' .

    $default  reduce using rule 15 (expr)


state 79

   21 expr: expr . ASSMNT expr
   21     | expr ASSMNT expr .
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    ASSMNT  shift, and go to state 51
    EQ      shift, and go to state 52
    NEQ     shift, and go to state 53
    LTEQ    shift, and go to state 54
    GTEQ    shift, and go to state 55
    LT      shift, and go to state 56
    GT      shift, and go to state 57
    MINUS   shift, and go to state 58
    PLUS    shift, and go to state 59
    DIV     shift, and go to state 60
    MUL     shift, and go to state 61
    POW     shift, and go to state 62

    $default  reduce using rule 21 (expr)


state 80

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   32     | expr EQ expr .

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    DIV    shift, and go to state 60
    MUL    shift, and go to state 61
    POW    shift, and go to state 62

    $default  reduce using rule 32 (expr)


state 81

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   31     | expr NEQ expr .
   32     | expr . EQ expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    DIV    shift, and go to state 60
    MUL    shift, and go to state 61
    POW    shift, and go to state 62

    $default  reduce using rule 31 (expr)


state 82

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   30     | expr LTEQ expr .
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    DIV    shift, and go to state 60
    MUL    shift, and go to state 61
    POW    shift, and go to state 62

    $default  reduce using rule 30 (expr)


state 83

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   29     | expr GTEQ expr .
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    DIV    shift, and go to state 60
    MUL    shift, and go to state 61
    POW    shift, and go to state 62

    $default  reduce using rule 29 (expr)


state 84

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   28     | expr LT expr .
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    DIV    shift, and go to state 60
    MUL    shift, and go to state 61
    POW    shift, and go to state 62

    $default  reduce using rule 28 (expr)


state 85

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   27     | expr GT expr .
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    DIV    shift, and go to state 60
    MUL    shift, and go to state 61
    POW    shift, and go to state 62

    $default  reduce using rule 27 (expr)


state 86

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   23     | expr MINUS expr .
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    DIV  shift, and go to state 60
    MUL  shift, and go to state 61
    POW  shift, and go to state 62

    $default  reduce using rule 23 (expr)


state 87

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   22     | expr PLUS expr .
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    DIV  shift, and go to state 60
    MUL  shift, and go to state 61
    POW  shift, and go to state 62

    $default  reduce using rule 22 (expr)


state 88

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   25     | expr DIV expr .
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    POW  shift, and go to state 62

    $default  reduce using rule 25 (expr)


state 89

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   24     | expr MUL expr .
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    POW  shift, and go to state 62

    $default  reduce using rule 24 (expr)


state 90

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   26     | expr POW expr .
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    $default  reduce using rule 26 (expr)


state 91

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   39 expr_list: expr_list ',' expr .

    ASSMNT  shift, and go to state 51
    EQ      shift, and go to state 52
    NEQ     shift, and go to state 53
    LTEQ    shift, and go to state 54
    GTEQ    shift, and go to state 55
    LT      shift, and go to state 56
    GT      shift, and go to state 57
    MINUS   shift, and go to state 58
    PLUS    shift, and go to state 59
    DIV     shift, and go to state 60
    MUL     shift, and go to state 61
    POW     shift, and go to state 62

    $default  reduce using rule 39 (expr_list)


state 92

   13 expr: identifier '[' expr_list . ']'
   39 expr_list: expr_list . ',' expr

    ']'  shift, and go to state 108
    ','  shift, and go to state 64


state 93

   37 function_call: identifier '(' expr_list . ')'
   39 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 109
    ','  shift, and go to state 64


state 94

   45 enum_array_identifier_list: identifier '[' . dimensions ']'

    INT_CONST  shift, and go to state 110

    dimensions  go to state 111


state 95

   42 decl: array_type enum_array_identifier_list ENDL .

    $default  reduce using rule 42 (decl)


state 96

   46 enum_array_identifier_list: enum_array_identifier_list ',' . identifier '[' dimensions ']'

    ID  shift, and go to state 6

    identifier  go to state 112


state 97

   41 decl: atomic_type enum_atomic_identifier_list ENDL .

    $default  reduce using rule 41 (decl)


state 98

   44 enum_atomic_identifier_list: enum_atomic_identifier_list ',' . identifier

    ID  shift, and go to state 6

    identifier  go to state 113


state 99

   49 proc_stmt: ALG identifier ENDL NACH . ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 114


state 100

   56 arg_value: ARG . atomic_type enum_atomic_identifier_list
   57          | ARG . array_type enum_array_identifier_list

    VESCH     shift, and go to state 9
    VESCHTAB  shift, and go to state 10
    LIT       shift, and go to state 14
    LITTAB    shift, and go to state 15
    LOG       shift, and go to state 16
    LOGTAB    shift, and go to state 17
    SIM       shift, and go to state 20
    SIMTAB    shift, and go to state 21
    CEL       shift, and go to state 22
    CELTAB    shift, and go to state 23

    array_type   go to state 115
    atomic_type  go to state 116


state 101

   58 rez_value: REZ . array_type enum_array_identifier_list
   59          | REZ . atomic_type enum_atomic_identifier_list

    VESCH     shift, and go to state 9
    VESCHTAB  shift, and go to state 10
    LIT       shift, and go to state 14
    LITTAB    shift, and go to state 15
    LOG       shift, and go to state 16
    LOGTAB    shift, and go to state 17
    SIM       shift, and go to state 20
    SIMTAB    shift, and go to state 21
    CEL       shift, and go to state 22
    CELTAB    shift, and go to state 23

    array_type   go to state 117
    atomic_type  go to state 118


state 102

   50 proc_stmt: ALG identifier '(' param_list . ')' ENDL NACH ENDL stmt_list KON ENDL
   52 param_list: param_list . ';' param

    ')'  shift, and go to state 119
    ';'  shift, and go to state 120


state 103

   51 param_list: param .

    $default  reduce using rule 51 (param_list)


state 104

   54 param: arg_value .

    $default  reduce using rule 54 (param)


state 105

   55 param: rez_value .

    $default  reduce using rule 55 (param)


state 106

   47 func_stmt: ALG atomic_type identifier ENDL . NACH ENDL stmt_list KON ENDL

    NACH  shift, and go to state 121


state 107

   48 func_stmt: ALG atomic_type identifier '(' . param_list ')' ENDL NACH stmt_list KON ENDL

    ARG  shift, and go to state 100
    REZ  shift, and go to state 101

    param_list  go to state 122
    param       go to state 103
    arg_value   go to state 104
    rez_value   go to state 105


state 108

   13 expr: identifier '[' expr_list ']' .

    $default  reduce using rule 13 (expr)


state 109

   37 function_call: identifier '(' expr_list ')' .

    $default  reduce using rule 37 (function_call)


state 110

   60 dimensions: INT_CONST . ':' INT_CONST
   61           | INT_CONST . ':' identifier

    ':'  shift, and go to state 123


state 111

   45 enum_array_identifier_list: identifier '[' dimensions . ']'
   62 dimensions: dimensions . ',' INT_CONST ':' INT_CONST
   63           | dimensions . ',' INT_CONST ':' identifier

    ']'  shift, and go to state 124
    ','  shift, and go to state 125


state 112

   46 enum_array_identifier_list: enum_array_identifier_list ',' identifier . '[' dimensions ']'

    '['  shift, and go to state 126


state 113

   44 enum_atomic_identifier_list: enum_atomic_identifier_list ',' identifier .

    $default  reduce using rule 44 (enum_atomic_identifier_list)


state 114

   49 proc_stmt: ALG identifier ENDL NACH ENDL . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    SIM           shift, and go to state 20
    SIMTAB        shift, and go to state 21
    CEL           shift, and go to state 22
    CELTAB        shift, and go to state 23
    ENDL          shift, and go to state 24
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    stmt_list      go to state 127
    stmt           go to state 29
    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 32
    identifier     go to state 33
    decl           go to state 34
    func_stmt      go to state 35
    proc_stmt      go to state 36
    znach_value    go to state 37
    array_type     go to state 38
    atomic_type    go to state 39
    print          go to state 40
    read           go to state 41


state 115

   57 arg_value: ARG array_type . enum_array_identifier_list

    ID  shift, and go to state 6

    identifier                  go to state 68
    enum_array_identifier_list  go to state 128


state 116

   56 arg_value: ARG atomic_type . enum_atomic_identifier_list

    ID  shift, and go to state 6

    identifier                   go to state 70
    enum_atomic_identifier_list  go to state 129


state 117

   58 rez_value: REZ array_type . enum_array_identifier_list

    ID  shift, and go to state 6

    identifier                  go to state 68
    enum_array_identifier_list  go to state 130


state 118

   59 rez_value: REZ atomic_type . enum_atomic_identifier_list

    ID  shift, and go to state 6

    identifier                   go to state 70
    enum_atomic_identifier_list  go to state 131


state 119

   50 proc_stmt: ALG identifier '(' param_list ')' . ENDL NACH ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 132


state 120

   52 param_list: param_list ';' . param

    ARG  shift, and go to state 100
    REZ  shift, and go to state 101

    param      go to state 133
    arg_value  go to state 104
    rez_value  go to state 105


state 121

   47 func_stmt: ALG atomic_type identifier ENDL NACH . ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 134


state 122

   48 func_stmt: ALG atomic_type identifier '(' param_list . ')' ENDL NACH stmt_list KON ENDL
   52 param_list: param_list . ';' param

    ')'  shift, and go to state 135
    ';'  shift, and go to state 120


state 123

   60 dimensions: INT_CONST ':' . INT_CONST
   61           | INT_CONST ':' . identifier

    INT_CONST  shift, and go to state 136
    ID         shift, and go to state 6

    identifier  go to state 137


state 124

   45 enum_array_identifier_list: identifier '[' dimensions ']' .

    $default  reduce using rule 45 (enum_array_identifier_list)


state 125

   62 dimensions: dimensions ',' . INT_CONST ':' INT_CONST
   63           | dimensions ',' . INT_CONST ':' identifier

    INT_CONST  shift, and go to state 138


state 126

   46 enum_array_identifier_list: enum_array_identifier_list ',' identifier '[' . dimensions ']'

    INT_CONST  shift, and go to state 110

    dimensions  go to state 139


state 127

    3 stmt_list: stmt_list . stmt
   49 proc_stmt: ALG identifier ENDL NACH ENDL stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 140
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    SIM           shift, and go to state 20
    SIMTAB        shift, and go to state 21
    CEL           shift, and go to state 22
    CELTAB        shift, and go to state 23
    ENDL          shift, and go to state 24
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    stmt           go to state 50
    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 32
    identifier     go to state 33
    decl           go to state 34
    func_stmt      go to state 35
    proc_stmt      go to state 36
    znach_value    go to state 37
    array_type     go to state 38
    atomic_type    go to state 39
    print          go to state 40
    read           go to state 41


state 128

   46 enum_array_identifier_list: enum_array_identifier_list . ',' identifier '[' dimensions ']'
   57 arg_value: ARG array_type enum_array_identifier_list .

    ','  shift, and go to state 96

    $default  reduce using rule 57 (arg_value)


state 129

   44 enum_atomic_identifier_list: enum_atomic_identifier_list . ',' identifier
   56 arg_value: ARG atomic_type enum_atomic_identifier_list .

    ','  shift, and go to state 98

    $default  reduce using rule 56 (arg_value)


state 130

   46 enum_array_identifier_list: enum_array_identifier_list . ',' identifier '[' dimensions ']'
   58 rez_value: REZ array_type enum_array_identifier_list .

    ','  shift, and go to state 96

    $default  reduce using rule 58 (rez_value)


state 131

   44 enum_atomic_identifier_list: enum_atomic_identifier_list . ',' identifier
   59 rez_value: REZ atomic_type enum_atomic_identifier_list .

    ','  shift, and go to state 98

    $default  reduce using rule 59 (rez_value)


state 132

   50 proc_stmt: ALG identifier '(' param_list ')' ENDL . NACH ENDL stmt_list KON ENDL

    NACH  shift, and go to state 141


state 133

   52 param_list: param_list ';' param .

    $default  reduce using rule 52 (param_list)


state 134

   47 func_stmt: ALG atomic_type identifier ENDL NACH ENDL . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    SIM           shift, and go to state 20
    SIMTAB        shift, and go to state 21
    CEL           shift, and go to state 22
    CELTAB        shift, and go to state 23
    ENDL          shift, and go to state 24
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    stmt_list      go to state 142
    stmt           go to state 29
    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 32
    identifier     go to state 33
    decl           go to state 34
    func_stmt      go to state 35
    proc_stmt      go to state 36
    znach_value    go to state 37
    array_type     go to state 38
    atomic_type    go to state 39
    print          go to state 40
    read           go to state 41


state 135

   48 func_stmt: ALG atomic_type identifier '(' param_list ')' . ENDL NACH stmt_list KON ENDL

    ENDL  shift, and go to state 143


state 136

   60 dimensions: INT_CONST ':' INT_CONST .

    $default  reduce using rule 60 (dimensions)


state 137

   61 dimensions: INT_CONST ':' identifier .

    $default  reduce using rule 61 (dimensions)


state 138

   62 dimensions: dimensions ',' INT_CONST . ':' INT_CONST
   63           | dimensions ',' INT_CONST . ':' identifier

    ':'  shift, and go to state 144


state 139

   46 enum_array_identifier_list: enum_array_identifier_list ',' identifier '[' dimensions . ']'
   62 dimensions: dimensions . ',' INT_CONST ':' INT_CONST
   63           | dimensions . ',' INT_CONST ':' identifier

    ']'  shift, and go to state 145
    ','  shift, and go to state 125


state 140

   49 proc_stmt: ALG identifier ENDL NACH ENDL stmt_list KON . ENDL

    ENDL  shift, and go to state 146


state 141

   50 proc_stmt: ALG identifier '(' param_list ')' ENDL NACH . ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 147


state 142

    3 stmt_list: stmt_list . stmt
   47 func_stmt: ALG atomic_type identifier ENDL NACH ENDL stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 148
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    SIM           shift, and go to state 20
    SIMTAB        shift, and go to state 21
    CEL           shift, and go to state 22
    CELTAB        shift, and go to state 23
    ENDL          shift, and go to state 24
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    stmt           go to state 50
    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 32
    identifier     go to state 33
    decl           go to state 34
    func_stmt      go to state 35
    proc_stmt      go to state 36
    znach_value    go to state 37
    array_type     go to state 38
    atomic_type    go to state 39
    print          go to state 40
    read           go to state 41


state 143

   48 func_stmt: ALG atomic_type identifier '(' param_list ')' ENDL . NACH stmt_list KON ENDL

    NACH  shift, and go to state 149


state 144

   62 dimensions: dimensions ',' INT_CONST ':' . INT_CONST
   63           | dimensions ',' INT_CONST ':' . identifier

    INT_CONST  shift, and go to state 150
    ID         shift, and go to state 6

    identifier  go to state 151


state 145

   46 enum_array_identifier_list: enum_array_identifier_list ',' identifier '[' dimensions ']' .

    $default  reduce using rule 46 (enum_array_identifier_list)


state 146

   49 proc_stmt: ALG identifier ENDL NACH ENDL stmt_list KON ENDL .

    $default  reduce using rule 49 (proc_stmt)


state 147

   50 proc_stmt: ALG identifier '(' param_list ')' ENDL NACH ENDL . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    SIM           shift, and go to state 20
    SIMTAB        shift, and go to state 21
    CEL           shift, and go to state 22
    CELTAB        shift, and go to state 23
    ENDL          shift, and go to state 24
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    stmt_list      go to state 152
    stmt           go to state 29
    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 32
    identifier     go to state 33
    decl           go to state 34
    func_stmt      go to state 35
    proc_stmt      go to state 36
    znach_value    go to state 37
    array_type     go to state 38
    atomic_type    go to state 39
    print          go to state 40
    read           go to state 41


state 148

   47 func_stmt: ALG atomic_type identifier ENDL NACH ENDL stmt_list KON . ENDL

    ENDL  shift, and go to state 153


state 149

   48 func_stmt: ALG atomic_type identifier '(' param_list ')' ENDL NACH . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    SIM           shift, and go to state 20
    SIMTAB        shift, and go to state 21
    CEL           shift, and go to state 22
    CELTAB        shift, and go to state 23
    ENDL          shift, and go to state 24
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    stmt_list      go to state 154
    stmt           go to state 29
    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 32
    identifier     go to state 33
    decl           go to state 34
    func_stmt      go to state 35
    proc_stmt      go to state 36
    znach_value    go to state 37
    array_type     go to state 38
    atomic_type    go to state 39
    print          go to state 40
    read           go to state 41


state 150

   62 dimensions: dimensions ',' INT_CONST ':' INT_CONST .

    $default  reduce using rule 62 (dimensions)


state 151

   63 dimensions: dimensions ',' INT_CONST ':' identifier .

    $default  reduce using rule 63 (dimensions)


state 152

    3 stmt_list: stmt_list . stmt
   50 proc_stmt: ALG identifier '(' param_list ')' ENDL NACH ENDL stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 155
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    SIM           shift, and go to state 20
    SIMTAB        shift, and go to state 21
    CEL           shift, and go to state 22
    CELTAB        shift, and go to state 23
    ENDL          shift, and go to state 24
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    stmt           go to state 50
    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 32
    identifier     go to state 33
    decl           go to state 34
    func_stmt      go to state 35
    proc_stmt      go to state 36
    znach_value    go to state 37
    array_type     go to state 38
    atomic_type    go to state 39
    print          go to state 40
    read           go to state 41


state 153

   47 func_stmt: ALG atomic_type identifier ENDL NACH ENDL stmt_list KON ENDL .

    $default  reduce using rule 47 (func_stmt)


state 154

    3 stmt_list: stmt_list . stmt
   48 func_stmt: ALG atomic_type identifier '(' param_list ')' ENDL NACH stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 156
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    NS            shift, and go to state 19
    SIM           shift, and go to state 20
    SIMTAB        shift, and go to state 21
    CEL           shift, and go to state 22
    CELTAB        shift, and go to state 23
    ENDL          shift, and go to state 24
    MINUS         shift, and go to state 25
    '('           shift, and go to state 26

    stmt           go to state 50
    expr           go to state 30
    function_call  go to state 31
    expr_list      go to state 32
    identifier     go to state 33
    decl           go to state 34
    func_stmt      go to state 35
    proc_stmt      go to state 36
    znach_value    go to state 37
    array_type     go to state 38
    atomic_type    go to state 39
    print          go to state 40
    read           go to state 41


state 155

   50 proc_stmt: ALG identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON . ENDL

    ENDL  shift, and go to state 157


state 156

   48 func_stmt: ALG atomic_type identifier '(' param_list ')' ENDL NACH stmt_list KON . ENDL

    ENDL  shift, and go to state 158


state 157

   50 proc_stmt: ALG identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL .

    $default  reduce using rule 50 (proc_stmt)


state 158

   48 func_stmt: ALG atomic_type identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL .

    $default  reduce using rule 48 (func_stmt)
