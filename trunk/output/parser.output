Terminals unused in grammar

   NS
   BOGUS


State 31 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt_list

    2 stmt_list: stmt
    3          | stmt_list stmt

    4 stmt: ENDL
    5     | expr_list
    6     | func_stmt
    7     | proc_stmt
    8     | print_list ENDL
    9     | read_list ENDL
   10     | znach_value
   11     | decl

   12 expr: function_call
   13     | identifier '[' expr_list ']'
   14     | identifier
   15     | '(' expr ')'
   16     | INT_CONST
   17     | CHAR_CONST
   18     | STRING_CONST
   19     | DOUBLE_CONST
   20     | BOOL_CONST
   21     | expr ASSMNT expr
   22     | expr PLUS expr
   23     | expr MINUS expr
   24     | expr MUL expr
   25     | expr DIV expr
   26     | expr POW expr
   27     | expr GT expr
   28     | expr LT expr
   29     | expr GTEQ expr
   30     | expr LTEQ expr
   31     | expr NEQ expr
   32     | expr EQ expr
   33     | NET
   34     | DA

   35 function_call: identifier '(' expr_list ')'

   36 expr_list: expr
   37          | expr_list ',' expr

   38 identifier: ID

   39 decl: atomic_type SPACE enum_atomic_identifiers ENDL
   40     | array_type SPACE enum_array_identifiers ENDL

   41 enum_atomic_identifiers: identifier
   42                        | enum_atomic_identifiers ',' identifier
   43                        | enum_atomic_identifiers SPACE ',' identifier
   44                        | enum_atomic_identifiers ',' SPACE identifier
   45                        | enum_atomic_identifiers SPACE ',' SPACE identifier

   46 enum_array_identifiers: identifier '[' dimensions ']'
   47                       | enum_array_identifiers ',' identifier '[' dimensions ']'

   48 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL KON ENDL
   49          | ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

   50 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list KON ENDL
   51          | ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

   52 param_list: param
   53           | param_list ';' param

   54 znach_value: ZNACH ASSMNT expr

   55 param: arg_value
   56      | rez_value

   57 arg_value: ARG SPACE atomic_type SPACE enum_atomic_identifiers
   58          | ARG SPACE array_type SPACE enum_array_identifiers

   59 rez_value: REZ SPACE array_type SPACE enum_array_identifiers
   60          | REZ SPACE atomic_type SPACE enum_atomic_identifiers

   61 dimensions: INT_CONST ':' INT_CONST
   62           | INT_CONST ':' identifier
   63           | dimensions ',' INT_CONST ':' INT_CONST
   64           | dimensions ',' INT_CONST ':' identifier

   65 array_type: CELTAB
   66           | VESCHTAB
   67           | SIMTAB
   68           | LITTAB
   69           | LOGTAB

   70 atomic_type: CEL
   71            | VESCH
   72            | SIM
   73            | LIT
   74            | LOG

   75 print_list: VYVOD SPACE expr_list

   76 read_list: VVOD SPACE expr_list


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 35 49 51
')' (41) 15 35 49 51
',' (44) 37 42 43 44 45 47 63 64
':' (58) 61 62 63 64
';' (59) 53
'[' (91) 13 46 47
']' (93) 13 46 47
error (256)
BOOL_CONST (258) 20
INT_CONST (259) 16 61 62 63 64
STRING_CONST (260) 18
DOUBLE_CONST (261) 19
CHAR_CONST (262) 17
ID (263) 38
ALG (264) 48 49 50 51
ARG (265) 57 58
VVOD (266) 76
VESCH (267) 71
VESCHTAB (268) 66
VYVOD (269) 75
DA (270) 34
ZNACH (271) 54
KON (272) 48 49 50 51
LIT (273) 73
LITTAB (274) 68
LOG (275) 74
LOGTAB (276) 69
NACH (277) 48 49 50 51
NET (278) 33
NS (279)
REZ (280) 59 60
SIM (281) 72
SIMTAB (282) 67
CEL (283) 70
CELTAB (284) 65
ENDL (285) 4 8 9 39 40 48 49 50 51
SPACE (286) 39 40 43 44 45 48 49 50 51 57 58 59 60 75 76
BOGUS (287)
ASSMNT (288) 21 54
EQ (289) 32
NEQ (290) 31
LTEQ (291) 30
GTEQ (292) 29
LT (293) 28
GT (294) 27
MINUS (295) 23
PLUS (296) 22
DIV (297) 25
MUL (298) 24
POW (299) 26


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
stmt_list (54)
    on left: 2 3, on right: 1 3 48 49 50 51
stmt (55)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
expr (56)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    30 31 32 33 34, on right: 15 21 22 23 24 25 26 27 28 29 30 31 32
    36 37 54
function_call (57)
    on left: 35, on right: 12
expr_list (58)
    on left: 36 37, on right: 5 13 35 37 75 76
identifier (59)
    on left: 38, on right: 13 14 35 41 42 43 44 45 46 47 48 49 50 51
    62 64
decl (60)
    on left: 39 40, on right: 11
enum_atomic_identifiers (61)
    on left: 41 42 43 44 45, on right: 39 42 43 44 45 57 60
enum_array_identifiers (62)
    on left: 46 47, on right: 40 47 58 59
func_stmt (63)
    on left: 48 49, on right: 6
proc_stmt (64)
    on left: 50 51, on right: 7
param_list (65)
    on left: 52 53, on right: 49 51 53
znach_value (66)
    on left: 54, on right: 10
param (67)
    on left: 55 56, on right: 52 53
arg_value (68)
    on left: 57 58, on right: 55
rez_value (69)
    on left: 59 60, on right: 56
dimensions (70)
    on left: 61 62 63 64, on right: 46 47 63 64
array_type (71)
    on left: 65 66 67 68 69, on right: 40 58 59
atomic_type (72)
    on left: 70 71 72 73 74, on right: 39 48 49 57 60
print_list (73)
    on left: 75, on right: 8
read_list (74)
    on left: 76, on right: 9


state 0

    0 $accept: . program $end

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    '('           shift, and go to state 24

    program        go to state 25
    stmt_list      go to state 26
    stmt           go to state 27
    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 30
    identifier     go to state 31
    decl           go to state 32
    func_stmt      go to state 33
    proc_stmt      go to state 34
    znach_value    go to state 35
    array_type     go to state 36
    atomic_type    go to state 37
    print_list     go to state 38
    read_list      go to state 39


state 1

   20 expr: BOOL_CONST .

    $default  reduce using rule 20 (expr)


state 2

   16 expr: INT_CONST .

    $default  reduce using rule 16 (expr)


state 3

   18 expr: STRING_CONST .

    $default  reduce using rule 18 (expr)


state 4

   19 expr: DOUBLE_CONST .

    $default  reduce using rule 19 (expr)


state 5

   17 expr: CHAR_CONST .

    $default  reduce using rule 17 (expr)


state 6

   38 identifier: ID .

    $default  reduce using rule 38 (identifier)


state 7

   48 func_stmt: ALG . SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL KON ENDL
   49          | ALG . SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL
   50 proc_stmt: ALG . SPACE identifier ENDL NACH ENDL stmt_list KON ENDL
   51          | ALG . SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    SPACE  shift, and go to state 40


state 8

   76 read_list: VVOD . SPACE expr_list

    SPACE  shift, and go to state 41


state 9

   71 atomic_type: VESCH .

    $default  reduce using rule 71 (atomic_type)


state 10

   66 array_type: VESCHTAB .

    $default  reduce using rule 66 (array_type)


state 11

   75 print_list: VYVOD . SPACE expr_list

    SPACE  shift, and go to state 42


state 12

   34 expr: DA .

    $default  reduce using rule 34 (expr)


state 13

   54 znach_value: ZNACH . ASSMNT expr

    ASSMNT  shift, and go to state 43


state 14

   73 atomic_type: LIT .

    $default  reduce using rule 73 (atomic_type)


state 15

   68 array_type: LITTAB .

    $default  reduce using rule 68 (array_type)


state 16

   74 atomic_type: LOG .

    $default  reduce using rule 74 (atomic_type)


state 17

   69 array_type: LOGTAB .

    $default  reduce using rule 69 (array_type)


state 18

   33 expr: NET .

    $default  reduce using rule 33 (expr)


state 19

   72 atomic_type: SIM .

    $default  reduce using rule 72 (atomic_type)


state 20

   67 array_type: SIMTAB .

    $default  reduce using rule 67 (array_type)


state 21

   70 atomic_type: CEL .

    $default  reduce using rule 70 (atomic_type)


state 22

   65 array_type: CELTAB .

    $default  reduce using rule 65 (array_type)


state 23

    4 stmt: ENDL .

    $default  reduce using rule 4 (stmt)


state 24

   15 expr: '(' . expr ')'

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 44
    function_call  go to state 29
    identifier     go to state 31


state 25

    0 $accept: program . $end

    $end  shift, and go to state 45


state 26

    1 program: stmt_list .
    3 stmt_list: stmt_list . stmt

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    '('           shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt           go to state 46
    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 30
    identifier     go to state 31
    decl           go to state 32
    func_stmt      go to state 33
    proc_stmt      go to state 34
    znach_value    go to state 35
    array_type     go to state 36
    atomic_type    go to state 37
    print_list     go to state 38
    read_list      go to state 39


state 27

    2 stmt_list: stmt .

    $default  reduce using rule 2 (stmt_list)


state 28

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   36 expr_list: expr .

    ASSMNT  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LTEQ    shift, and go to state 50
    GTEQ    shift, and go to state 51
    LT      shift, and go to state 52
    GT      shift, and go to state 53
    MINUS   shift, and go to state 54
    PLUS    shift, and go to state 55
    DIV     shift, and go to state 56
    MUL     shift, and go to state 57
    POW     shift, and go to state 58

    $default  reduce using rule 36 (expr_list)


state 29

   12 expr: function_call .

    $default  reduce using rule 12 (expr)


state 30

    5 stmt: expr_list .
   37 expr_list: expr_list . ',' expr

    ','  shift, and go to state 59

    $default  reduce using rule 5 (stmt)


state 31

   13 expr: identifier . '[' expr_list ']'
   14     | identifier .
   35 function_call: identifier . '(' expr_list ')'

    '['  shift, and go to state 60
    '('  shift, and go to state 61

    '('       [reduce using rule 14 (expr)]
    $default  reduce using rule 14 (expr)


state 32

   11 stmt: decl .

    $default  reduce using rule 11 (stmt)


state 33

    6 stmt: func_stmt .

    $default  reduce using rule 6 (stmt)


state 34

    7 stmt: proc_stmt .

    $default  reduce using rule 7 (stmt)


state 35

   10 stmt: znach_value .

    $default  reduce using rule 10 (stmt)


state 36

   40 decl: array_type . SPACE enum_array_identifiers ENDL

    SPACE  shift, and go to state 62


state 37

   39 decl: atomic_type . SPACE enum_atomic_identifiers ENDL

    SPACE  shift, and go to state 63


state 38

    8 stmt: print_list . ENDL

    ENDL  shift, and go to state 64


state 39

    9 stmt: read_list . ENDL

    ENDL  shift, and go to state 65


state 40

   48 func_stmt: ALG SPACE . atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL KON ENDL
   49          | ALG SPACE . atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL
   50 proc_stmt: ALG SPACE . identifier ENDL NACH ENDL stmt_list KON ENDL
   51          | ALG SPACE . identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ID     shift, and go to state 6
    VESCH  shift, and go to state 9
    LIT    shift, and go to state 14
    LOG    shift, and go to state 16
    SIM    shift, and go to state 19
    CEL    shift, and go to state 21

    identifier   go to state 66
    atomic_type  go to state 67


state 41

   76 read_list: VVOD SPACE . expr_list

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 68
    identifier     go to state 31


state 42

   75 print_list: VYVOD SPACE . expr_list

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 69
    identifier     go to state 31


state 43

   54 znach_value: ZNACH ASSMNT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 70
    function_call  go to state 29
    identifier     go to state 31


state 44

   15 expr: '(' expr . ')'
   21     | expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    ASSMNT  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LTEQ    shift, and go to state 50
    GTEQ    shift, and go to state 51
    LT      shift, and go to state 52
    GT      shift, and go to state 53
    MINUS   shift, and go to state 54
    PLUS    shift, and go to state 55
    DIV     shift, and go to state 56
    MUL     shift, and go to state 57
    POW     shift, and go to state 58
    ')'     shift, and go to state 71


state 45

    0 $accept: program $end .

    $default  accept


state 46

    3 stmt_list: stmt_list stmt .

    $default  reduce using rule 3 (stmt_list)


state 47

   21 expr: expr ASSMNT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 72
    function_call  go to state 29
    identifier     go to state 31


state 48

   32 expr: expr EQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 73
    function_call  go to state 29
    identifier     go to state 31


state 49

   31 expr: expr NEQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 74
    function_call  go to state 29
    identifier     go to state 31


state 50

   30 expr: expr LTEQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 75
    function_call  go to state 29
    identifier     go to state 31


state 51

   29 expr: expr GTEQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 76
    function_call  go to state 29
    identifier     go to state 31


state 52

   28 expr: expr LT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 77
    function_call  go to state 29
    identifier     go to state 31


state 53

   27 expr: expr GT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 78
    function_call  go to state 29
    identifier     go to state 31


state 54

   23 expr: expr MINUS . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 79
    function_call  go to state 29
    identifier     go to state 31


state 55

   22 expr: expr PLUS . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 80
    function_call  go to state 29
    identifier     go to state 31


state 56

   25 expr: expr DIV . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 81
    function_call  go to state 29
    identifier     go to state 31


state 57

   24 expr: expr MUL . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 82
    function_call  go to state 29
    identifier     go to state 31


state 58

   26 expr: expr POW . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 83
    function_call  go to state 29
    identifier     go to state 31


state 59

   37 expr_list: expr_list ',' . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 84
    function_call  go to state 29
    identifier     go to state 31


state 60

   13 expr: identifier '[' . expr_list ']'

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 85
    identifier     go to state 31


state 61

   35 function_call: identifier '(' . expr_list ')'

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    '('           shift, and go to state 24

    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 86
    identifier     go to state 31


state 62

   40 decl: array_type SPACE . enum_array_identifiers ENDL

    ID  shift, and go to state 6

    identifier              go to state 87
    enum_array_identifiers  go to state 88


state 63

   39 decl: atomic_type SPACE . enum_atomic_identifiers ENDL

    ID  shift, and go to state 6

    identifier               go to state 89
    enum_atomic_identifiers  go to state 90


state 64

    8 stmt: print_list ENDL .

    $default  reduce using rule 8 (stmt)


state 65

    9 stmt: read_list ENDL .

    $default  reduce using rule 9 (stmt)


state 66

   50 proc_stmt: ALG SPACE identifier . ENDL NACH ENDL stmt_list KON ENDL
   51          | ALG SPACE identifier . '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 91
    '('   shift, and go to state 92


state 67

   48 func_stmt: ALG SPACE atomic_type . SPACE identifier ENDL NACH ENDL stmt_list ENDL KON ENDL
   49          | ALG SPACE atomic_type . SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

    SPACE  shift, and go to state 93


state 68

   37 expr_list: expr_list . ',' expr
   76 read_list: VVOD SPACE expr_list .

    ','  shift, and go to state 59

    $default  reduce using rule 76 (read_list)


state 69

   37 expr_list: expr_list . ',' expr
   75 print_list: VYVOD SPACE expr_list .

    ','  shift, and go to state 59

    $default  reduce using rule 75 (print_list)


state 70

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   54 znach_value: ZNACH ASSMNT expr .

    ASSMNT  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LTEQ    shift, and go to state 50
    GTEQ    shift, and go to state 51
    LT      shift, and go to state 52
    GT      shift, and go to state 53
    MINUS   shift, and go to state 54
    PLUS    shift, and go to state 55
    DIV     shift, and go to state 56
    MUL     shift, and go to state 57
    POW     shift, and go to state 58

    $default  reduce using rule 54 (znach_value)


state 71

   15 expr: '(' expr ')' .

    $default  reduce using rule 15 (expr)


state 72

   21 expr: expr . ASSMNT expr
   21     | expr ASSMNT expr .
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    ASSMNT  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LTEQ    shift, and go to state 50
    GTEQ    shift, and go to state 51
    LT      shift, and go to state 52
    GT      shift, and go to state 53
    MINUS   shift, and go to state 54
    PLUS    shift, and go to state 55
    DIV     shift, and go to state 56
    MUL     shift, and go to state 57
    POW     shift, and go to state 58

    $default  reduce using rule 21 (expr)


state 73

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   32     | expr EQ expr .

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 32 (expr)


state 74

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   31     | expr NEQ expr .
   32     | expr . EQ expr

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 31 (expr)


state 75

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   30     | expr LTEQ expr .
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 30 (expr)


state 76

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   29     | expr GTEQ expr .
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 29 (expr)


state 77

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   28     | expr LT expr .
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 28 (expr)


state 78

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   27     | expr GT expr .
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 27 (expr)


state 79

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   23     | expr MINUS expr .
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    DIV  shift, and go to state 56
    MUL  shift, and go to state 57
    POW  shift, and go to state 58

    $default  reduce using rule 23 (expr)


state 80

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   22     | expr PLUS expr .
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    DIV  shift, and go to state 56
    MUL  shift, and go to state 57
    POW  shift, and go to state 58

    $default  reduce using rule 22 (expr)


state 81

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   25     | expr DIV expr .
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    POW  shift, and go to state 58

    $default  reduce using rule 25 (expr)


state 82

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   24     | expr MUL expr .
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    POW  shift, and go to state 58

    $default  reduce using rule 24 (expr)


state 83

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   26     | expr POW expr .
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    $default  reduce using rule 26 (expr)


state 84

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   37 expr_list: expr_list ',' expr .

    ASSMNT  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LTEQ    shift, and go to state 50
    GTEQ    shift, and go to state 51
    LT      shift, and go to state 52
    GT      shift, and go to state 53
    MINUS   shift, and go to state 54
    PLUS    shift, and go to state 55
    DIV     shift, and go to state 56
    MUL     shift, and go to state 57
    POW     shift, and go to state 58

    $default  reduce using rule 37 (expr_list)


state 85

   13 expr: identifier '[' expr_list . ']'
   37 expr_list: expr_list . ',' expr

    ']'  shift, and go to state 94
    ','  shift, and go to state 59


state 86

   35 function_call: identifier '(' expr_list . ')'
   37 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 95
    ','  shift, and go to state 59


state 87

   46 enum_array_identifiers: identifier . '[' dimensions ']'

    '['  shift, and go to state 96


state 88

   40 decl: array_type SPACE enum_array_identifiers . ENDL
   47 enum_array_identifiers: enum_array_identifiers . ',' identifier '[' dimensions ']'

    ENDL  shift, and go to state 97
    ','   shift, and go to state 98


state 89

   41 enum_atomic_identifiers: identifier .

    $default  reduce using rule 41 (enum_atomic_identifiers)


state 90

   39 decl: atomic_type SPACE enum_atomic_identifiers . ENDL
   42 enum_atomic_identifiers: enum_atomic_identifiers . ',' identifier
   43                        | enum_atomic_identifiers . SPACE ',' identifier
   44                        | enum_atomic_identifiers . ',' SPACE identifier
   45                        | enum_atomic_identifiers . SPACE ',' SPACE identifier

    ENDL   shift, and go to state 99
    SPACE  shift, and go to state 100
    ','    shift, and go to state 101


state 91

   50 proc_stmt: ALG SPACE identifier ENDL . NACH ENDL stmt_list KON ENDL

    NACH  shift, and go to state 102


state 92

   51 proc_stmt: ALG SPACE identifier '(' . param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ARG  shift, and go to state 103
    REZ  shift, and go to state 104

    param_list  go to state 105
    param       go to state 106
    arg_value   go to state 107
    rez_value   go to state 108


state 93

   48 func_stmt: ALG SPACE atomic_type SPACE . identifier ENDL NACH ENDL stmt_list ENDL KON ENDL
   49          | ALG SPACE atomic_type SPACE . identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

    ID  shift, and go to state 6

    identifier  go to state 109


state 94

   13 expr: identifier '[' expr_list ']' .

    $default  reduce using rule 13 (expr)


state 95

   35 function_call: identifier '(' expr_list ')' .

    $default  reduce using rule 35 (function_call)


state 96

   46 enum_array_identifiers: identifier '[' . dimensions ']'

    INT_CONST  shift, and go to state 110

    dimensions  go to state 111


state 97

   40 decl: array_type SPACE enum_array_identifiers ENDL .

    $default  reduce using rule 40 (decl)


state 98

   47 enum_array_identifiers: enum_array_identifiers ',' . identifier '[' dimensions ']'

    ID  shift, and go to state 6

    identifier  go to state 112


state 99

   39 decl: atomic_type SPACE enum_atomic_identifiers ENDL .

    $default  reduce using rule 39 (decl)


state 100

   43 enum_atomic_identifiers: enum_atomic_identifiers SPACE . ',' identifier
   45                        | enum_atomic_identifiers SPACE . ',' SPACE identifier

    ','  shift, and go to state 113


state 101

   42 enum_atomic_identifiers: enum_atomic_identifiers ',' . identifier
   44                        | enum_atomic_identifiers ',' . SPACE identifier

    ID     shift, and go to state 6
    SPACE  shift, and go to state 114

    identifier  go to state 115


state 102

   50 proc_stmt: ALG SPACE identifier ENDL NACH . ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 116


state 103

   57 arg_value: ARG . SPACE atomic_type SPACE enum_atomic_identifiers
   58          | ARG . SPACE array_type SPACE enum_array_identifiers

    SPACE  shift, and go to state 117


state 104

   59 rez_value: REZ . SPACE array_type SPACE enum_array_identifiers
   60          | REZ . SPACE atomic_type SPACE enum_atomic_identifiers

    SPACE  shift, and go to state 118


state 105

   51 proc_stmt: ALG SPACE identifier '(' param_list . ')' ENDL NACH ENDL stmt_list KON ENDL
   53 param_list: param_list . ';' param

    ')'  shift, and go to state 119
    ';'  shift, and go to state 120


state 106

   52 param_list: param .

    $default  reduce using rule 52 (param_list)


state 107

   55 param: arg_value .

    $default  reduce using rule 55 (param)


state 108

   56 param: rez_value .

    $default  reduce using rule 56 (param)


state 109

   48 func_stmt: ALG SPACE atomic_type SPACE identifier . ENDL NACH ENDL stmt_list ENDL KON ENDL
   49          | ALG SPACE atomic_type SPACE identifier . '(' param_list ')' ENDL NACH stmt_list KON ENDL

    ENDL  shift, and go to state 121
    '('   shift, and go to state 122


state 110

   61 dimensions: INT_CONST . ':' INT_CONST
   62           | INT_CONST . ':' identifier

    ':'  shift, and go to state 123


state 111

   46 enum_array_identifiers: identifier '[' dimensions . ']'
   63 dimensions: dimensions . ',' INT_CONST ':' INT_CONST
   64           | dimensions . ',' INT_CONST ':' identifier

    ']'  shift, and go to state 124
    ','  shift, and go to state 125


state 112

   47 enum_array_identifiers: enum_array_identifiers ',' identifier . '[' dimensions ']'

    '['  shift, and go to state 126


state 113

   43 enum_atomic_identifiers: enum_atomic_identifiers SPACE ',' . identifier
   45                        | enum_atomic_identifiers SPACE ',' . SPACE identifier

    ID     shift, and go to state 6
    SPACE  shift, and go to state 127

    identifier  go to state 128


state 114

   44 enum_atomic_identifiers: enum_atomic_identifiers ',' SPACE . identifier

    ID  shift, and go to state 6

    identifier  go to state 129


state 115

   42 enum_atomic_identifiers: enum_atomic_identifiers ',' identifier .

    $default  reduce using rule 42 (enum_atomic_identifiers)


state 116

   50 proc_stmt: ALG SPACE identifier ENDL NACH ENDL . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    '('           shift, and go to state 24

    stmt_list      go to state 130
    stmt           go to state 27
    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 30
    identifier     go to state 31
    decl           go to state 32
    func_stmt      go to state 33
    proc_stmt      go to state 34
    znach_value    go to state 35
    array_type     go to state 36
    atomic_type    go to state 37
    print_list     go to state 38
    read_list      go to state 39


state 117

   57 arg_value: ARG SPACE . atomic_type SPACE enum_atomic_identifiers
   58          | ARG SPACE . array_type SPACE enum_array_identifiers

    VESCH     shift, and go to state 9
    VESCHTAB  shift, and go to state 10
    LIT       shift, and go to state 14
    LITTAB    shift, and go to state 15
    LOG       shift, and go to state 16
    LOGTAB    shift, and go to state 17
    SIM       shift, and go to state 19
    SIMTAB    shift, and go to state 20
    CEL       shift, and go to state 21
    CELTAB    shift, and go to state 22

    array_type   go to state 131
    atomic_type  go to state 132


state 118

   59 rez_value: REZ SPACE . array_type SPACE enum_array_identifiers
   60          | REZ SPACE . atomic_type SPACE enum_atomic_identifiers

    VESCH     shift, and go to state 9
    VESCHTAB  shift, and go to state 10
    LIT       shift, and go to state 14
    LITTAB    shift, and go to state 15
    LOG       shift, and go to state 16
    LOGTAB    shift, and go to state 17
    SIM       shift, and go to state 19
    SIMTAB    shift, and go to state 20
    CEL       shift, and go to state 21
    CELTAB    shift, and go to state 22

    array_type   go to state 133
    atomic_type  go to state 134


state 119

   51 proc_stmt: ALG SPACE identifier '(' param_list ')' . ENDL NACH ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 135


state 120

   53 param_list: param_list ';' . param

    ARG  shift, and go to state 103
    REZ  shift, and go to state 104

    param      go to state 136
    arg_value  go to state 107
    rez_value  go to state 108


state 121

   48 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL . NACH ENDL stmt_list ENDL KON ENDL

    NACH  shift, and go to state 137


state 122

   49 func_stmt: ALG SPACE atomic_type SPACE identifier '(' . param_list ')' ENDL NACH stmt_list KON ENDL

    ARG  shift, and go to state 103
    REZ  shift, and go to state 104

    param_list  go to state 138
    param       go to state 106
    arg_value   go to state 107
    rez_value   go to state 108


state 123

   61 dimensions: INT_CONST ':' . INT_CONST
   62           | INT_CONST ':' . identifier

    INT_CONST  shift, and go to state 139
    ID         shift, and go to state 6

    identifier  go to state 140


state 124

   46 enum_array_identifiers: identifier '[' dimensions ']' .

    $default  reduce using rule 46 (enum_array_identifiers)


state 125

   63 dimensions: dimensions ',' . INT_CONST ':' INT_CONST
   64           | dimensions ',' . INT_CONST ':' identifier

    INT_CONST  shift, and go to state 141


state 126

   47 enum_array_identifiers: enum_array_identifiers ',' identifier '[' . dimensions ']'

    INT_CONST  shift, and go to state 110

    dimensions  go to state 142


state 127

   45 enum_atomic_identifiers: enum_atomic_identifiers SPACE ',' SPACE . identifier

    ID  shift, and go to state 6

    identifier  go to state 143


state 128

   43 enum_atomic_identifiers: enum_atomic_identifiers SPACE ',' identifier .

    $default  reduce using rule 43 (enum_atomic_identifiers)


state 129

   44 enum_atomic_identifiers: enum_atomic_identifiers ',' SPACE identifier .

    $default  reduce using rule 44 (enum_atomic_identifiers)


state 130

    3 stmt_list: stmt_list . stmt
   50 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 144
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    '('           shift, and go to state 24

    stmt           go to state 46
    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 30
    identifier     go to state 31
    decl           go to state 32
    func_stmt      go to state 33
    proc_stmt      go to state 34
    znach_value    go to state 35
    array_type     go to state 36
    atomic_type    go to state 37
    print_list     go to state 38
    read_list      go to state 39


state 131

   58 arg_value: ARG SPACE array_type . SPACE enum_array_identifiers

    SPACE  shift, and go to state 145


state 132

   57 arg_value: ARG SPACE atomic_type . SPACE enum_atomic_identifiers

    SPACE  shift, and go to state 146


state 133

   59 rez_value: REZ SPACE array_type . SPACE enum_array_identifiers

    SPACE  shift, and go to state 147


state 134

   60 rez_value: REZ SPACE atomic_type . SPACE enum_atomic_identifiers

    SPACE  shift, and go to state 148


state 135

   51 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL . NACH ENDL stmt_list KON ENDL

    NACH  shift, and go to state 149


state 136

   53 param_list: param_list ';' param .

    $default  reduce using rule 53 (param_list)


state 137

   48 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH . ENDL stmt_list ENDL KON ENDL

    ENDL  shift, and go to state 150


state 138

   49 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list . ')' ENDL NACH stmt_list KON ENDL
   53 param_list: param_list . ';' param

    ')'  shift, and go to state 151
    ';'  shift, and go to state 120


state 139

   61 dimensions: INT_CONST ':' INT_CONST .

    $default  reduce using rule 61 (dimensions)


state 140

   62 dimensions: INT_CONST ':' identifier .

    $default  reduce using rule 62 (dimensions)


state 141

   63 dimensions: dimensions ',' INT_CONST . ':' INT_CONST
   64           | dimensions ',' INT_CONST . ':' identifier

    ':'  shift, and go to state 152


state 142

   47 enum_array_identifiers: enum_array_identifiers ',' identifier '[' dimensions . ']'
   63 dimensions: dimensions . ',' INT_CONST ':' INT_CONST
   64           | dimensions . ',' INT_CONST ':' identifier

    ']'  shift, and go to state 153
    ','  shift, and go to state 125


state 143

   45 enum_atomic_identifiers: enum_atomic_identifiers SPACE ',' SPACE identifier .

    $default  reduce using rule 45 (enum_atomic_identifiers)


state 144

   50 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list KON . ENDL

    ENDL  shift, and go to state 154


state 145

   58 arg_value: ARG SPACE array_type SPACE . enum_array_identifiers

    ID  shift, and go to state 6

    identifier              go to state 87
    enum_array_identifiers  go to state 155


state 146

   57 arg_value: ARG SPACE atomic_type SPACE . enum_atomic_identifiers

    ID  shift, and go to state 6

    identifier               go to state 89
    enum_atomic_identifiers  go to state 156


state 147

   59 rez_value: REZ SPACE array_type SPACE . enum_array_identifiers

    ID  shift, and go to state 6

    identifier              go to state 87
    enum_array_identifiers  go to state 157


state 148

   60 rez_value: REZ SPACE atomic_type SPACE . enum_atomic_identifiers

    ID  shift, and go to state 6

    identifier               go to state 89
    enum_atomic_identifiers  go to state 158


state 149

   51 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH . ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 159


state 150

   48 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL . stmt_list ENDL KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    '('           shift, and go to state 24

    stmt_list      go to state 160
    stmt           go to state 27
    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 30
    identifier     go to state 31
    decl           go to state 32
    func_stmt      go to state 33
    proc_stmt      go to state 34
    znach_value    go to state 35
    array_type     go to state 36
    atomic_type    go to state 37
    print_list     go to state 38
    read_list      go to state 39


state 151

   49 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' . ENDL NACH stmt_list KON ENDL

    ENDL  shift, and go to state 161


state 152

   63 dimensions: dimensions ',' INT_CONST ':' . INT_CONST
   64           | dimensions ',' INT_CONST ':' . identifier

    INT_CONST  shift, and go to state 162
    ID         shift, and go to state 6

    identifier  go to state 163


state 153

   47 enum_array_identifiers: enum_array_identifiers ',' identifier '[' dimensions ']' .

    $default  reduce using rule 47 (enum_array_identifiers)


state 154

   50 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list KON ENDL .

    $default  reduce using rule 50 (proc_stmt)


state 155

   47 enum_array_identifiers: enum_array_identifiers . ',' identifier '[' dimensions ']'
   58 arg_value: ARG SPACE array_type SPACE enum_array_identifiers .

    ','  shift, and go to state 98

    $default  reduce using rule 58 (arg_value)


state 156

   42 enum_atomic_identifiers: enum_atomic_identifiers . ',' identifier
   43                        | enum_atomic_identifiers . SPACE ',' identifier
   44                        | enum_atomic_identifiers . ',' SPACE identifier
   45                        | enum_atomic_identifiers . SPACE ',' SPACE identifier
   57 arg_value: ARG SPACE atomic_type SPACE enum_atomic_identifiers .

    SPACE  shift, and go to state 100
    ','    shift, and go to state 101

    $default  reduce using rule 57 (arg_value)


state 157

   47 enum_array_identifiers: enum_array_identifiers . ',' identifier '[' dimensions ']'
   59 rez_value: REZ SPACE array_type SPACE enum_array_identifiers .

    ','  shift, and go to state 98

    $default  reduce using rule 59 (rez_value)


state 158

   42 enum_atomic_identifiers: enum_atomic_identifiers . ',' identifier
   43                        | enum_atomic_identifiers . SPACE ',' identifier
   44                        | enum_atomic_identifiers . ',' SPACE identifier
   45                        | enum_atomic_identifiers . SPACE ',' SPACE identifier
   60 rez_value: REZ SPACE atomic_type SPACE enum_atomic_identifiers .

    SPACE  shift, and go to state 100
    ','    shift, and go to state 101

    $default  reduce using rule 60 (rez_value)


state 159

   51 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    '('           shift, and go to state 24

    stmt_list      go to state 164
    stmt           go to state 27
    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 30
    identifier     go to state 31
    decl           go to state 32
    func_stmt      go to state 33
    proc_stmt      go to state 34
    znach_value    go to state 35
    array_type     go to state 36
    atomic_type    go to state 37
    print_list     go to state 38
    read_list      go to state 39


state 160

    3 stmt_list: stmt_list . stmt
   48 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list . ENDL KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 165
    '('           shift, and go to state 24

    stmt           go to state 46
    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 30
    identifier     go to state 31
    decl           go to state 32
    func_stmt      go to state 33
    proc_stmt      go to state 34
    znach_value    go to state 35
    array_type     go to state 36
    atomic_type    go to state 37
    print_list     go to state 38
    read_list      go to state 39


state 161

   49 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL . NACH stmt_list KON ENDL

    NACH  shift, and go to state 166


state 162

   63 dimensions: dimensions ',' INT_CONST ':' INT_CONST .

    $default  reduce using rule 63 (dimensions)


state 163

   64 dimensions: dimensions ',' INT_CONST ':' identifier .

    $default  reduce using rule 64 (dimensions)


state 164

    3 stmt_list: stmt_list . stmt
   51 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 167
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    '('           shift, and go to state 24

    stmt           go to state 46
    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 30
    identifier     go to state 31
    decl           go to state 32
    func_stmt      go to state 33
    proc_stmt      go to state 34
    znach_value    go to state 35
    array_type     go to state 36
    atomic_type    go to state 37
    print_list     go to state 38
    read_list      go to state 39


state 165

    4 stmt: ENDL .
   48 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL . KON ENDL

    KON  shift, and go to state 168

    $default  reduce using rule 4 (stmt)


state 166

   49 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    '('           shift, and go to state 24

    stmt_list      go to state 169
    stmt           go to state 27
    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 30
    identifier     go to state 31
    decl           go to state 32
    func_stmt      go to state 33
    proc_stmt      go to state 34
    znach_value    go to state 35
    array_type     go to state 36
    atomic_type    go to state 37
    print_list     go to state 38
    read_list      go to state 39


state 167

   51 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON . ENDL

    ENDL  shift, and go to state 170


state 168

   48 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL KON . ENDL

    ENDL  shift, and go to state 171


state 169

    3 stmt_list: stmt_list . stmt
   49 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 172
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    '('           shift, and go to state 24

    stmt           go to state 46
    expr           go to state 28
    function_call  go to state 29
    expr_list      go to state 30
    identifier     go to state 31
    decl           go to state 32
    func_stmt      go to state 33
    proc_stmt      go to state 34
    znach_value    go to state 35
    array_type     go to state 36
    atomic_type    go to state 37
    print_list     go to state 38
    read_list      go to state 39


state 170

   51 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL .

    $default  reduce using rule 51 (proc_stmt)


state 171

   48 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL KON ENDL .

    $default  reduce using rule 48 (func_stmt)


state 172

   49 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON . ENDL

    ENDL  shift, and go to state 173


state 173

   49 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL .

    $default  reduce using rule 49 (func_stmt)
