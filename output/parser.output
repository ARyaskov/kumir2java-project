Nonterminals useless in grammar

   decl_list
   enum_identifiers
   type


Terminals unused in grammar

   DA
   NET
   BOGUS


Rules useless in grammar

   88 decl_list: decl
   89          | decl_list ENDL decl
   90          | decl_list

   91 enum_identifiers: enum_atomic_identifiers
   92                 | enum_array_identifiers

   93 type: atomic_type
   94     | array_type


State 28 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt_list

    2 stmt_list: stmt
    3          | stmt_list stmt

    4 stmt: ENDL
    5     | expr_list
    6     | func_stmt
    7     | proc_stmt
    8     | print_list
    9     | read_list
   10     | znach_value
   11     | decl

   12 expr: function_call
   13     | identifier '[' expr_list ']'
   14     | identifier
   15     | '(' expr ')'
   16     | INT_CONST
   17     | CHAR_CONST
   18     | STRING_CONST
   19     | DOUBLE_CONST
   20     | expr ASSMNT expr
   21     | expr PLUS expr
   22     | expr MINUS expr
   23     | expr MUL expr
   24     | expr DIV expr
   25     | expr POW expr
   26     | expr GT expr
   27     | expr LT expr
   28     | expr GTEQ expr
   29     | expr LTEQ expr
   30     | expr NEQ expr
   31     | expr EQ expr

   32 function_call: identifier '(' expr_list ')'

   33 expr_list: expr
   34          | expr_list ',' expr

   35 identifier: ID

   36 decl: atomic_type SPACE enum_atomic_identifiers ENDL
   37     | array_type SPACE enum_array_identifiers ENDL

   38 enum_atomic_identifiers: identifier
   39                        | enum_atomic_identifiers ',' identifier
   40                        | enum_atomic_identifiers SPACE ',' identifier
   41                        | enum_atomic_identifiers ',' SPACE identifier
   42                        | enum_atomic_identifiers SPACE ',' SPACE identifier

   43 enum_array_identifiers: identifier '[' dimensions ']'
   44                       | enum_array_identifiers ',' identifier '[' dimensions ']'
   45                       | enum_array_identifiers ',' identifier '[' dimensions ']' '\n'

   46 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL KON ENDL
   47          | ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

   48 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list KON ENDL
   49          | ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

   50 param_list: param
   51           | param_list ',' param

   52 znach_value: ZNACH ASSMNT expr

   53 param: arg_value
   54      | rez_value

   55 arg_value: ARG SPACE atomic_type SPACE identifier
   56          | ARG SPACE array_type SPACE identifier '[' dimensions ']'

   57 rez_value: REZ SPACE array_type identifier '[' dimensions ']'
   58          | REZ SPACE atomic_type identifier

   59 dimensions: INT_CONST ':' INT_CONST
   60           | identifier ':' identifier
   61           | INT_CONST ':' identifier
   62           | identifier ':' INT_CONST
   63           | dimensions ',' INT_CONST ':' INT_CONST
   64           | dimensions ',' identifier ':' identifier
   65           | dimensions ',' INT_CONST ':' identifier
   66           | dimensions ',' identifier ':' INT_CONST

   67 array_type: CELTAB
   68           | VESCHTAB
   69           | SIMTAB
   70           | LITTAB
   71           | LOGTAB

   72 atomic_type: CEL
   73            | VESCH
   74            | SIM
   75            | LIT
   76            | LOG

   77 print_list: VYVOD STRING_CONST
   78           | VYVOD INT_CONST
   79           | VYVOD CHAR_CONST
   80           | VYVOD identifier
   81           | print_list ',' NS
   82           | print_list ',' STRING_CONST
   83           | print_list ',' INT_CONST
   84           | print_list ',' CHAR_CONST
   85           | print_list ',' identifier

   86 read_list: VVOD identifier
   87          | read_list ',' identifier


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 45
'(' (40) 15 32 47 49
')' (41) 15 32 47 49
',' (44) 34 39 40 41 42 44 45 51 63 64 65 66 81 82 83 84 85 87
':' (58) 59 60 61 62 63 64 65 66
'[' (91) 13 43 44 45 56 57
']' (93) 13 43 44 45 56 57
error (256)
INT_CONST (258) 16 59 61 62 63 65 66 78 83
STRING_CONST (259) 18 77 82
DOUBLE_CONST (260) 19
CHAR_CONST (261) 17 79 84
ID (262) 35
ALG (263) 46 47 48 49
ARG (264) 55 56
VVOD (265) 86
VESCH (266) 73
VESCHTAB (267) 68
VYVOD (268) 77 78 79 80
DA (269)
ZNACH (270) 52
KON (271) 46 47 48 49
LIT (272) 75
LITTAB (273) 70
LOG (274) 76
LOGTAB (275) 71
NACH (276) 46 47 48 49
NET (277)
NS (278) 81
REZ (279) 57 58
SIM (280) 74
SIMTAB (281) 69
CEL (282) 72
CELTAB (283) 67
ENDL (284) 4 36 37 46 47 48 49
SPACE (285) 36 37 40 41 42 46 47 48 49 55 56 57 58
BOGUS (286)
ASSMNT (287) 20 52
EQ (288) 31
NEQ (289) 30
LTEQ (290) 29
GTEQ (291) 28
LT (292) 27
GT (293) 26
MINUS (294) 22
PLUS (295) 21
DIV (296) 24
MUL (297) 23
POW (298) 25


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
stmt_list (53)
    on left: 2 3, on right: 1 3 46 47 48 49
stmt (54)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
expr (55)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    30 31, on right: 15 20 21 22 23 24 25 26 27 28 29 30 31 33 34 52
function_call (56)
    on left: 32, on right: 12
expr_list (57)
    on left: 33 34, on right: 5 13 32 34
identifier (58)
    on left: 35, on right: 13 14 32 38 39 40 41 42 43 44 45 46 47 48
    49 55 56 57 58 60 61 62 64 65 66 80 85 86 87
decl (59)
    on left: 36 37, on right: 11
enum_atomic_identifiers (60)
    on left: 38 39 40 41 42, on right: 36 39 40 41 42
enum_array_identifiers (61)
    on left: 43 44 45, on right: 37 44 45
func_stmt (62)
    on left: 46 47, on right: 6
proc_stmt (63)
    on left: 48 49, on right: 7
param_list (64)
    on left: 50 51, on right: 47 49 51
znach_value (65)
    on left: 52, on right: 10
param (66)
    on left: 53 54, on right: 50 51
arg_value (67)
    on left: 55 56, on right: 53
rez_value (68)
    on left: 57 58, on right: 54
dimensions (69)
    on left: 59 60 61 62 63 64 65 66, on right: 43 44 45 56 57 63 64
    65 66
array_type (70)
    on left: 67 68 69 70 71, on right: 37 56 57
atomic_type (71)
    on left: 72 73 74 75 76, on right: 36 46 47 55 58
print_list (72)
    on left: 77 78 79 80 81 82 83 84 85, on right: 8 81 82 83 84 85
read_list (73)
    on left: 86 87, on right: 9 87


state 0

    0 $accept: . program $end

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    ALG           shift, and go to state 6
    VVOD          shift, and go to state 7
    VESCH         shift, and go to state 8
    VESCHTAB      shift, and go to state 9
    VYVOD         shift, and go to state 10
    ZNACH         shift, and go to state 11
    LIT           shift, and go to state 12
    LITTAB        shift, and go to state 13
    LOG           shift, and go to state 14
    LOGTAB        shift, and go to state 15
    SIM           shift, and go to state 16
    SIMTAB        shift, and go to state 17
    CEL           shift, and go to state 18
    CELTAB        shift, and go to state 19
    ENDL          shift, and go to state 20
    '('           shift, and go to state 21

    program        go to state 22
    stmt_list      go to state 23
    stmt           go to state 24
    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 27
    identifier     go to state 28
    decl           go to state 29
    func_stmt      go to state 30
    proc_stmt      go to state 31
    znach_value    go to state 32
    array_type     go to state 33
    atomic_type    go to state 34
    print_list     go to state 35
    read_list      go to state 36


state 1

   16 expr: INT_CONST .

    $default  reduce using rule 16 (expr)


state 2

   18 expr: STRING_CONST .

    $default  reduce using rule 18 (expr)


state 3

   19 expr: DOUBLE_CONST .

    $default  reduce using rule 19 (expr)


state 4

   17 expr: CHAR_CONST .

    $default  reduce using rule 17 (expr)


state 5

   35 identifier: ID .

    $default  reduce using rule 35 (identifier)


state 6

   46 func_stmt: ALG . SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL KON ENDL
   47          | ALG . SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL
   48 proc_stmt: ALG . SPACE identifier ENDL NACH ENDL stmt_list KON ENDL
   49          | ALG . SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    SPACE  shift, and go to state 37


state 7

   86 read_list: VVOD . identifier

    ID  shift, and go to state 5

    identifier  go to state 38


state 8

   73 atomic_type: VESCH .

    $default  reduce using rule 73 (atomic_type)


state 9

   68 array_type: VESCHTAB .

    $default  reduce using rule 68 (array_type)


state 10

   77 print_list: VYVOD . STRING_CONST
   78           | VYVOD . INT_CONST
   79           | VYVOD . CHAR_CONST
   80           | VYVOD . identifier

    INT_CONST     shift, and go to state 39
    STRING_CONST  shift, and go to state 40
    CHAR_CONST    shift, and go to state 41
    ID            shift, and go to state 5

    identifier  go to state 42


state 11

   52 znach_value: ZNACH . ASSMNT expr

    ASSMNT  shift, and go to state 43


state 12

   75 atomic_type: LIT .

    $default  reduce using rule 75 (atomic_type)


state 13

   70 array_type: LITTAB .

    $default  reduce using rule 70 (array_type)


state 14

   76 atomic_type: LOG .

    $default  reduce using rule 76 (atomic_type)


state 15

   71 array_type: LOGTAB .

    $default  reduce using rule 71 (array_type)


state 16

   74 atomic_type: SIM .

    $default  reduce using rule 74 (atomic_type)


state 17

   69 array_type: SIMTAB .

    $default  reduce using rule 69 (array_type)


state 18

   72 atomic_type: CEL .

    $default  reduce using rule 72 (atomic_type)


state 19

   67 array_type: CELTAB .

    $default  reduce using rule 67 (array_type)


state 20

    4 stmt: ENDL .

    $default  reduce using rule 4 (stmt)


state 21

   15 expr: '(' . expr ')'

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 44
    function_call  go to state 26
    identifier     go to state 28


state 22

    0 $accept: program . $end

    $end  shift, and go to state 45


state 23

    1 program: stmt_list .
    3 stmt_list: stmt_list . stmt

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    ALG           shift, and go to state 6
    VVOD          shift, and go to state 7
    VESCH         shift, and go to state 8
    VESCHTAB      shift, and go to state 9
    VYVOD         shift, and go to state 10
    ZNACH         shift, and go to state 11
    LIT           shift, and go to state 12
    LITTAB        shift, and go to state 13
    LOG           shift, and go to state 14
    LOGTAB        shift, and go to state 15
    SIM           shift, and go to state 16
    SIMTAB        shift, and go to state 17
    CEL           shift, and go to state 18
    CELTAB        shift, and go to state 19
    ENDL          shift, and go to state 20
    '('           shift, and go to state 21

    $default  reduce using rule 1 (program)

    stmt           go to state 46
    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 27
    identifier     go to state 28
    decl           go to state 29
    func_stmt      go to state 30
    proc_stmt      go to state 31
    znach_value    go to state 32
    array_type     go to state 33
    atomic_type    go to state 34
    print_list     go to state 35
    read_list      go to state 36


state 24

    2 stmt_list: stmt .

    $default  reduce using rule 2 (stmt_list)


state 25

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr
   33 expr_list: expr .

    ASSMNT  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LTEQ    shift, and go to state 50
    GTEQ    shift, and go to state 51
    LT      shift, and go to state 52
    GT      shift, and go to state 53
    MINUS   shift, and go to state 54
    PLUS    shift, and go to state 55
    DIV     shift, and go to state 56
    MUL     shift, and go to state 57
    POW     shift, and go to state 58

    $default  reduce using rule 33 (expr_list)


state 26

   12 expr: function_call .

    $default  reduce using rule 12 (expr)


state 27

    5 stmt: expr_list .
   34 expr_list: expr_list . ',' expr

    ','  shift, and go to state 59

    $default  reduce using rule 5 (stmt)


state 28

   13 expr: identifier . '[' expr_list ']'
   14     | identifier .
   32 function_call: identifier . '(' expr_list ')'

    '['  shift, and go to state 60
    '('  shift, and go to state 61

    '('       [reduce using rule 14 (expr)]
    $default  reduce using rule 14 (expr)


state 29

   11 stmt: decl .

    $default  reduce using rule 11 (stmt)


state 30

    6 stmt: func_stmt .

    $default  reduce using rule 6 (stmt)


state 31

    7 stmt: proc_stmt .

    $default  reduce using rule 7 (stmt)


state 32

   10 stmt: znach_value .

    $default  reduce using rule 10 (stmt)


state 33

   37 decl: array_type . SPACE enum_array_identifiers ENDL

    SPACE  shift, and go to state 62


state 34

   36 decl: atomic_type . SPACE enum_atomic_identifiers ENDL

    SPACE  shift, and go to state 63


state 35

    8 stmt: print_list .
   81 print_list: print_list . ',' NS
   82           | print_list . ',' STRING_CONST
   83           | print_list . ',' INT_CONST
   84           | print_list . ',' CHAR_CONST
   85           | print_list . ',' identifier

    ','  shift, and go to state 64

    $default  reduce using rule 8 (stmt)


state 36

    9 stmt: read_list .
   87 read_list: read_list . ',' identifier

    ','  shift, and go to state 65

    $default  reduce using rule 9 (stmt)


state 37

   46 func_stmt: ALG SPACE . atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL KON ENDL
   47          | ALG SPACE . atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL
   48 proc_stmt: ALG SPACE . identifier ENDL NACH ENDL stmt_list KON ENDL
   49          | ALG SPACE . identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ID     shift, and go to state 5
    VESCH  shift, and go to state 8
    LIT    shift, and go to state 12
    LOG    shift, and go to state 14
    SIM    shift, and go to state 16
    CEL    shift, and go to state 18

    identifier   go to state 66
    atomic_type  go to state 67


state 38

   86 read_list: VVOD identifier .

    $default  reduce using rule 86 (read_list)


state 39

   78 print_list: VYVOD INT_CONST .

    $default  reduce using rule 78 (print_list)


state 40

   77 print_list: VYVOD STRING_CONST .

    $default  reduce using rule 77 (print_list)


state 41

   79 print_list: VYVOD CHAR_CONST .

    $default  reduce using rule 79 (print_list)


state 42

   80 print_list: VYVOD identifier .

    $default  reduce using rule 80 (print_list)


state 43

   52 znach_value: ZNACH ASSMNT . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 68
    function_call  go to state 26
    identifier     go to state 28


state 44

   15 expr: '(' expr . ')'
   20     | expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr

    ASSMNT  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LTEQ    shift, and go to state 50
    GTEQ    shift, and go to state 51
    LT      shift, and go to state 52
    GT      shift, and go to state 53
    MINUS   shift, and go to state 54
    PLUS    shift, and go to state 55
    DIV     shift, and go to state 56
    MUL     shift, and go to state 57
    POW     shift, and go to state 58
    ')'     shift, and go to state 69


state 45

    0 $accept: program $end .

    $default  accept


state 46

    3 stmt_list: stmt_list stmt .

    $default  reduce using rule 3 (stmt_list)


state 47

   20 expr: expr ASSMNT . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 70
    function_call  go to state 26
    identifier     go to state 28


state 48

   31 expr: expr EQ . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 71
    function_call  go to state 26
    identifier     go to state 28


state 49

   30 expr: expr NEQ . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 72
    function_call  go to state 26
    identifier     go to state 28


state 50

   29 expr: expr LTEQ . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 73
    function_call  go to state 26
    identifier     go to state 28


state 51

   28 expr: expr GTEQ . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 74
    function_call  go to state 26
    identifier     go to state 28


state 52

   27 expr: expr LT . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 75
    function_call  go to state 26
    identifier     go to state 28


state 53

   26 expr: expr GT . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 76
    function_call  go to state 26
    identifier     go to state 28


state 54

   22 expr: expr MINUS . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 77
    function_call  go to state 26
    identifier     go to state 28


state 55

   21 expr: expr PLUS . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 78
    function_call  go to state 26
    identifier     go to state 28


state 56

   24 expr: expr DIV . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 79
    function_call  go to state 26
    identifier     go to state 28


state 57

   23 expr: expr MUL . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 80
    function_call  go to state 26
    identifier     go to state 28


state 58

   25 expr: expr POW . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 81
    function_call  go to state 26
    identifier     go to state 28


state 59

   34 expr_list: expr_list ',' . expr

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 82
    function_call  go to state 26
    identifier     go to state 28


state 60

   13 expr: identifier '[' . expr_list ']'

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 83
    identifier     go to state 28


state 61

   32 function_call: identifier '(' . expr_list ')'

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    '('           shift, and go to state 21

    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 84
    identifier     go to state 28


state 62

   37 decl: array_type SPACE . enum_array_identifiers ENDL

    ID  shift, and go to state 5

    identifier              go to state 85
    enum_array_identifiers  go to state 86


state 63

   36 decl: atomic_type SPACE . enum_atomic_identifiers ENDL

    ID  shift, and go to state 5

    identifier               go to state 87
    enum_atomic_identifiers  go to state 88


state 64

   81 print_list: print_list ',' . NS
   82           | print_list ',' . STRING_CONST
   83           | print_list ',' . INT_CONST
   84           | print_list ',' . CHAR_CONST
   85           | print_list ',' . identifier

    INT_CONST     shift, and go to state 89
    STRING_CONST  shift, and go to state 90
    CHAR_CONST    shift, and go to state 91
    ID            shift, and go to state 5
    NS            shift, and go to state 92

    identifier  go to state 93


state 65

   87 read_list: read_list ',' . identifier

    ID  shift, and go to state 5

    identifier  go to state 94


state 66

   48 proc_stmt: ALG SPACE identifier . ENDL NACH ENDL stmt_list KON ENDL
   49          | ALG SPACE identifier . '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 95
    '('   shift, and go to state 96


state 67

   46 func_stmt: ALG SPACE atomic_type . SPACE identifier ENDL NACH ENDL stmt_list ENDL KON ENDL
   47          | ALG SPACE atomic_type . SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

    SPACE  shift, and go to state 97


state 68

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr
   52 znach_value: ZNACH ASSMNT expr .

    ASSMNT  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LTEQ    shift, and go to state 50
    GTEQ    shift, and go to state 51
    LT      shift, and go to state 52
    GT      shift, and go to state 53
    MINUS   shift, and go to state 54
    PLUS    shift, and go to state 55
    DIV     shift, and go to state 56
    MUL     shift, and go to state 57
    POW     shift, and go to state 58

    $default  reduce using rule 52 (znach_value)


state 69

   15 expr: '(' expr ')' .

    $default  reduce using rule 15 (expr)


state 70

   20 expr: expr . ASSMNT expr
   20     | expr ASSMNT expr .
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr

    ASSMNT  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LTEQ    shift, and go to state 50
    GTEQ    shift, and go to state 51
    LT      shift, and go to state 52
    GT      shift, and go to state 53
    MINUS   shift, and go to state 54
    PLUS    shift, and go to state 55
    DIV     shift, and go to state 56
    MUL     shift, and go to state 57
    POW     shift, and go to state 58

    $default  reduce using rule 20 (expr)


state 71

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr
   31     | expr EQ expr .

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 31 (expr)


state 72

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   30     | expr NEQ expr .
   31     | expr . EQ expr

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 30 (expr)


state 73

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   29     | expr LTEQ expr .
   30     | expr . NEQ expr
   31     | expr . EQ expr

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 29 (expr)


state 74

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   28     | expr GTEQ expr .
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 28 (expr)


state 75

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   27     | expr LT expr .
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 27 (expr)


state 76

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   26     | expr GT expr .
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr

    MINUS  shift, and go to state 54
    PLUS   shift, and go to state 55
    DIV    shift, and go to state 56
    MUL    shift, and go to state 57
    POW    shift, and go to state 58

    $default  reduce using rule 26 (expr)


state 77

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   22     | expr MINUS expr .
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr

    DIV  shift, and go to state 56
    MUL  shift, and go to state 57
    POW  shift, and go to state 58

    $default  reduce using rule 22 (expr)


state 78

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   21     | expr PLUS expr .
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr

    DIV  shift, and go to state 56
    MUL  shift, and go to state 57
    POW  shift, and go to state 58

    $default  reduce using rule 21 (expr)


state 79

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   24     | expr DIV expr .
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr

    POW  shift, and go to state 58

    $default  reduce using rule 24 (expr)


state 80

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   23     | expr MUL expr .
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr

    POW  shift, and go to state 58

    $default  reduce using rule 23 (expr)


state 81

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   25     | expr POW expr .
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr

    $default  reduce using rule 25 (expr)


state 82

   20 expr: expr . ASSMNT expr
   21     | expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . POW expr
   26     | expr . GT expr
   27     | expr . LT expr
   28     | expr . GTEQ expr
   29     | expr . LTEQ expr
   30     | expr . NEQ expr
   31     | expr . EQ expr
   34 expr_list: expr_list ',' expr .

    ASSMNT  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LTEQ    shift, and go to state 50
    GTEQ    shift, and go to state 51
    LT      shift, and go to state 52
    GT      shift, and go to state 53
    MINUS   shift, and go to state 54
    PLUS    shift, and go to state 55
    DIV     shift, and go to state 56
    MUL     shift, and go to state 57
    POW     shift, and go to state 58

    $default  reduce using rule 34 (expr_list)


state 83

   13 expr: identifier '[' expr_list . ']'
   34 expr_list: expr_list . ',' expr

    ']'  shift, and go to state 98
    ','  shift, and go to state 59


state 84

   32 function_call: identifier '(' expr_list . ')'
   34 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 99
    ','  shift, and go to state 59


state 85

   43 enum_array_identifiers: identifier . '[' dimensions ']'

    '['  shift, and go to state 100


state 86

   37 decl: array_type SPACE enum_array_identifiers . ENDL
   44 enum_array_identifiers: enum_array_identifiers . ',' identifier '[' dimensions ']'
   45                       | enum_array_identifiers . ',' identifier '[' dimensions ']' '\n'

    ENDL  shift, and go to state 101
    ','   shift, and go to state 102


state 87

   38 enum_atomic_identifiers: identifier .

    $default  reduce using rule 38 (enum_atomic_identifiers)


state 88

   36 decl: atomic_type SPACE enum_atomic_identifiers . ENDL
   39 enum_atomic_identifiers: enum_atomic_identifiers . ',' identifier
   40                        | enum_atomic_identifiers . SPACE ',' identifier
   41                        | enum_atomic_identifiers . ',' SPACE identifier
   42                        | enum_atomic_identifiers . SPACE ',' SPACE identifier

    ENDL   shift, and go to state 103
    SPACE  shift, and go to state 104
    ','    shift, and go to state 105


state 89

   83 print_list: print_list ',' INT_CONST .

    $default  reduce using rule 83 (print_list)


state 90

   82 print_list: print_list ',' STRING_CONST .

    $default  reduce using rule 82 (print_list)


state 91

   84 print_list: print_list ',' CHAR_CONST .

    $default  reduce using rule 84 (print_list)


state 92

   81 print_list: print_list ',' NS .

    $default  reduce using rule 81 (print_list)


state 93

   85 print_list: print_list ',' identifier .

    $default  reduce using rule 85 (print_list)


state 94

   87 read_list: read_list ',' identifier .

    $default  reduce using rule 87 (read_list)


state 95

   48 proc_stmt: ALG SPACE identifier ENDL . NACH ENDL stmt_list KON ENDL

    NACH  shift, and go to state 106


state 96

   49 proc_stmt: ALG SPACE identifier '(' . param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ARG  shift, and go to state 107
    REZ  shift, and go to state 108

    param_list  go to state 109
    param       go to state 110
    arg_value   go to state 111
    rez_value   go to state 112


state 97

   46 func_stmt: ALG SPACE atomic_type SPACE . identifier ENDL NACH ENDL stmt_list ENDL KON ENDL
   47          | ALG SPACE atomic_type SPACE . identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

    ID  shift, and go to state 5

    identifier  go to state 113


state 98

   13 expr: identifier '[' expr_list ']' .

    $default  reduce using rule 13 (expr)


state 99

   32 function_call: identifier '(' expr_list ')' .

    $default  reduce using rule 32 (function_call)


state 100

   43 enum_array_identifiers: identifier '[' . dimensions ']'

    INT_CONST  shift, and go to state 114
    ID         shift, and go to state 5

    identifier  go to state 115
    dimensions  go to state 116


state 101

   37 decl: array_type SPACE enum_array_identifiers ENDL .

    $default  reduce using rule 37 (decl)


state 102

   44 enum_array_identifiers: enum_array_identifiers ',' . identifier '[' dimensions ']'
   45                       | enum_array_identifiers ',' . identifier '[' dimensions ']' '\n'

    ID  shift, and go to state 5

    identifier  go to state 117


state 103

   36 decl: atomic_type SPACE enum_atomic_identifiers ENDL .

    $default  reduce using rule 36 (decl)


state 104

   40 enum_atomic_identifiers: enum_atomic_identifiers SPACE . ',' identifier
   42                        | enum_atomic_identifiers SPACE . ',' SPACE identifier

    ','  shift, and go to state 118


state 105

   39 enum_atomic_identifiers: enum_atomic_identifiers ',' . identifier
   41                        | enum_atomic_identifiers ',' . SPACE identifier

    ID     shift, and go to state 5
    SPACE  shift, and go to state 119

    identifier  go to state 120


state 106

   48 proc_stmt: ALG SPACE identifier ENDL NACH . ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 121


state 107

   55 arg_value: ARG . SPACE atomic_type SPACE identifier
   56          | ARG . SPACE array_type SPACE identifier '[' dimensions ']'

    SPACE  shift, and go to state 122


state 108

   57 rez_value: REZ . SPACE array_type identifier '[' dimensions ']'
   58          | REZ . SPACE atomic_type identifier

    SPACE  shift, and go to state 123


state 109

   49 proc_stmt: ALG SPACE identifier '(' param_list . ')' ENDL NACH ENDL stmt_list KON ENDL
   51 param_list: param_list . ',' param

    ')'  shift, and go to state 124
    ','  shift, and go to state 125


state 110

   50 param_list: param .

    $default  reduce using rule 50 (param_list)


state 111

   53 param: arg_value .

    $default  reduce using rule 53 (param)


state 112

   54 param: rez_value .

    $default  reduce using rule 54 (param)


state 113

   46 func_stmt: ALG SPACE atomic_type SPACE identifier . ENDL NACH ENDL stmt_list ENDL KON ENDL
   47          | ALG SPACE atomic_type SPACE identifier . '(' param_list ')' ENDL NACH stmt_list KON ENDL

    ENDL  shift, and go to state 126
    '('   shift, and go to state 127


state 114

   59 dimensions: INT_CONST . ':' INT_CONST
   61           | INT_CONST . ':' identifier

    ':'  shift, and go to state 128


state 115

   60 dimensions: identifier . ':' identifier
   62           | identifier . ':' INT_CONST

    ':'  shift, and go to state 129


state 116

   43 enum_array_identifiers: identifier '[' dimensions . ']'
   63 dimensions: dimensions . ',' INT_CONST ':' INT_CONST
   64           | dimensions . ',' identifier ':' identifier
   65           | dimensions . ',' INT_CONST ':' identifier
   66           | dimensions . ',' identifier ':' INT_CONST

    ']'  shift, and go to state 130
    ','  shift, and go to state 131


state 117

   44 enum_array_identifiers: enum_array_identifiers ',' identifier . '[' dimensions ']'
   45                       | enum_array_identifiers ',' identifier . '[' dimensions ']' '\n'

    '['  shift, and go to state 132


state 118

   40 enum_atomic_identifiers: enum_atomic_identifiers SPACE ',' . identifier
   42                        | enum_atomic_identifiers SPACE ',' . SPACE identifier

    ID     shift, and go to state 5
    SPACE  shift, and go to state 133

    identifier  go to state 134


state 119

   41 enum_atomic_identifiers: enum_atomic_identifiers ',' SPACE . identifier

    ID  shift, and go to state 5

    identifier  go to state 135


state 120

   39 enum_atomic_identifiers: enum_atomic_identifiers ',' identifier .

    $default  reduce using rule 39 (enum_atomic_identifiers)


state 121

   48 proc_stmt: ALG SPACE identifier ENDL NACH ENDL . stmt_list KON ENDL

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    ALG           shift, and go to state 6
    VVOD          shift, and go to state 7
    VESCH         shift, and go to state 8
    VESCHTAB      shift, and go to state 9
    VYVOD         shift, and go to state 10
    ZNACH         shift, and go to state 11
    LIT           shift, and go to state 12
    LITTAB        shift, and go to state 13
    LOG           shift, and go to state 14
    LOGTAB        shift, and go to state 15
    SIM           shift, and go to state 16
    SIMTAB        shift, and go to state 17
    CEL           shift, and go to state 18
    CELTAB        shift, and go to state 19
    ENDL          shift, and go to state 20
    '('           shift, and go to state 21

    stmt_list      go to state 136
    stmt           go to state 24
    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 27
    identifier     go to state 28
    decl           go to state 29
    func_stmt      go to state 30
    proc_stmt      go to state 31
    znach_value    go to state 32
    array_type     go to state 33
    atomic_type    go to state 34
    print_list     go to state 35
    read_list      go to state 36


state 122

   55 arg_value: ARG SPACE . atomic_type SPACE identifier
   56          | ARG SPACE . array_type SPACE identifier '[' dimensions ']'

    VESCH     shift, and go to state 8
    VESCHTAB  shift, and go to state 9
    LIT       shift, and go to state 12
    LITTAB    shift, and go to state 13
    LOG       shift, and go to state 14
    LOGTAB    shift, and go to state 15
    SIM       shift, and go to state 16
    SIMTAB    shift, and go to state 17
    CEL       shift, and go to state 18
    CELTAB    shift, and go to state 19

    array_type   go to state 137
    atomic_type  go to state 138


state 123

   57 rez_value: REZ SPACE . array_type identifier '[' dimensions ']'
   58          | REZ SPACE . atomic_type identifier

    VESCH     shift, and go to state 8
    VESCHTAB  shift, and go to state 9
    LIT       shift, and go to state 12
    LITTAB    shift, and go to state 13
    LOG       shift, and go to state 14
    LOGTAB    shift, and go to state 15
    SIM       shift, and go to state 16
    SIMTAB    shift, and go to state 17
    CEL       shift, and go to state 18
    CELTAB    shift, and go to state 19

    array_type   go to state 139
    atomic_type  go to state 140


state 124

   49 proc_stmt: ALG SPACE identifier '(' param_list ')' . ENDL NACH ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 141


state 125

   51 param_list: param_list ',' . param

    ARG  shift, and go to state 107
    REZ  shift, and go to state 108

    param      go to state 142
    arg_value  go to state 111
    rez_value  go to state 112


state 126

   46 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL . NACH ENDL stmt_list ENDL KON ENDL

    NACH  shift, and go to state 143


state 127

   47 func_stmt: ALG SPACE atomic_type SPACE identifier '(' . param_list ')' ENDL NACH stmt_list KON ENDL

    ARG  shift, and go to state 107
    REZ  shift, and go to state 108

    param_list  go to state 144
    param       go to state 110
    arg_value   go to state 111
    rez_value   go to state 112


state 128

   59 dimensions: INT_CONST ':' . INT_CONST
   61           | INT_CONST ':' . identifier

    INT_CONST  shift, and go to state 145
    ID         shift, and go to state 5

    identifier  go to state 146


state 129

   60 dimensions: identifier ':' . identifier
   62           | identifier ':' . INT_CONST

    INT_CONST  shift, and go to state 147
    ID         shift, and go to state 5

    identifier  go to state 148


state 130

   43 enum_array_identifiers: identifier '[' dimensions ']' .

    $default  reduce using rule 43 (enum_array_identifiers)


state 131

   63 dimensions: dimensions ',' . INT_CONST ':' INT_CONST
   64           | dimensions ',' . identifier ':' identifier
   65           | dimensions ',' . INT_CONST ':' identifier
   66           | dimensions ',' . identifier ':' INT_CONST

    INT_CONST  shift, and go to state 149
    ID         shift, and go to state 5

    identifier  go to state 150


state 132

   44 enum_array_identifiers: enum_array_identifiers ',' identifier '[' . dimensions ']'
   45                       | enum_array_identifiers ',' identifier '[' . dimensions ']' '\n'

    INT_CONST  shift, and go to state 114
    ID         shift, and go to state 5

    identifier  go to state 115
    dimensions  go to state 151


state 133

   42 enum_atomic_identifiers: enum_atomic_identifiers SPACE ',' SPACE . identifier

    ID  shift, and go to state 5

    identifier  go to state 152


state 134

   40 enum_atomic_identifiers: enum_atomic_identifiers SPACE ',' identifier .

    $default  reduce using rule 40 (enum_atomic_identifiers)


state 135

   41 enum_atomic_identifiers: enum_atomic_identifiers ',' SPACE identifier .

    $default  reduce using rule 41 (enum_atomic_identifiers)


state 136

    3 stmt_list: stmt_list . stmt
   48 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list . KON ENDL

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    ALG           shift, and go to state 6
    VVOD          shift, and go to state 7
    VESCH         shift, and go to state 8
    VESCHTAB      shift, and go to state 9
    VYVOD         shift, and go to state 10
    ZNACH         shift, and go to state 11
    KON           shift, and go to state 153
    LIT           shift, and go to state 12
    LITTAB        shift, and go to state 13
    LOG           shift, and go to state 14
    LOGTAB        shift, and go to state 15
    SIM           shift, and go to state 16
    SIMTAB        shift, and go to state 17
    CEL           shift, and go to state 18
    CELTAB        shift, and go to state 19
    ENDL          shift, and go to state 20
    '('           shift, and go to state 21

    stmt           go to state 46
    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 27
    identifier     go to state 28
    decl           go to state 29
    func_stmt      go to state 30
    proc_stmt      go to state 31
    znach_value    go to state 32
    array_type     go to state 33
    atomic_type    go to state 34
    print_list     go to state 35
    read_list      go to state 36


state 137

   56 arg_value: ARG SPACE array_type . SPACE identifier '[' dimensions ']'

    SPACE  shift, and go to state 154


state 138

   55 arg_value: ARG SPACE atomic_type . SPACE identifier

    SPACE  shift, and go to state 155


state 139

   57 rez_value: REZ SPACE array_type . identifier '[' dimensions ']'

    ID  shift, and go to state 5

    identifier  go to state 156


state 140

   58 rez_value: REZ SPACE atomic_type . identifier

    ID  shift, and go to state 5

    identifier  go to state 157


state 141

   49 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL . NACH ENDL stmt_list KON ENDL

    NACH  shift, and go to state 158


state 142

   51 param_list: param_list ',' param .

    $default  reduce using rule 51 (param_list)


state 143

   46 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH . ENDL stmt_list ENDL KON ENDL

    ENDL  shift, and go to state 159


state 144

   47 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list . ')' ENDL NACH stmt_list KON ENDL
   51 param_list: param_list . ',' param

    ')'  shift, and go to state 160
    ','  shift, and go to state 125


state 145

   59 dimensions: INT_CONST ':' INT_CONST .

    $default  reduce using rule 59 (dimensions)


state 146

   61 dimensions: INT_CONST ':' identifier .

    $default  reduce using rule 61 (dimensions)


state 147

   62 dimensions: identifier ':' INT_CONST .

    $default  reduce using rule 62 (dimensions)


state 148

   60 dimensions: identifier ':' identifier .

    $default  reduce using rule 60 (dimensions)


state 149

   63 dimensions: dimensions ',' INT_CONST . ':' INT_CONST
   65           | dimensions ',' INT_CONST . ':' identifier

    ':'  shift, and go to state 161


state 150

   64 dimensions: dimensions ',' identifier . ':' identifier
   66           | dimensions ',' identifier . ':' INT_CONST

    ':'  shift, and go to state 162


state 151

   44 enum_array_identifiers: enum_array_identifiers ',' identifier '[' dimensions . ']'
   45                       | enum_array_identifiers ',' identifier '[' dimensions . ']' '\n'
   63 dimensions: dimensions . ',' INT_CONST ':' INT_CONST
   64           | dimensions . ',' identifier ':' identifier
   65           | dimensions . ',' INT_CONST ':' identifier
   66           | dimensions . ',' identifier ':' INT_CONST

    ']'  shift, and go to state 163
    ','  shift, and go to state 131


state 152

   42 enum_atomic_identifiers: enum_atomic_identifiers SPACE ',' SPACE identifier .

    $default  reduce using rule 42 (enum_atomic_identifiers)


state 153

   48 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list KON . ENDL

    ENDL  shift, and go to state 164


state 154

   56 arg_value: ARG SPACE array_type SPACE . identifier '[' dimensions ']'

    ID  shift, and go to state 5

    identifier  go to state 165


state 155

   55 arg_value: ARG SPACE atomic_type SPACE . identifier

    ID  shift, and go to state 5

    identifier  go to state 166


state 156

   57 rez_value: REZ SPACE array_type identifier . '[' dimensions ']'

    '['  shift, and go to state 167


state 157

   58 rez_value: REZ SPACE atomic_type identifier .

    $default  reduce using rule 58 (rez_value)


state 158

   49 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH . ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 168


state 159

   46 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL . stmt_list ENDL KON ENDL

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    ALG           shift, and go to state 6
    VVOD          shift, and go to state 7
    VESCH         shift, and go to state 8
    VESCHTAB      shift, and go to state 9
    VYVOD         shift, and go to state 10
    ZNACH         shift, and go to state 11
    LIT           shift, and go to state 12
    LITTAB        shift, and go to state 13
    LOG           shift, and go to state 14
    LOGTAB        shift, and go to state 15
    SIM           shift, and go to state 16
    SIMTAB        shift, and go to state 17
    CEL           shift, and go to state 18
    CELTAB        shift, and go to state 19
    ENDL          shift, and go to state 20
    '('           shift, and go to state 21

    stmt_list      go to state 169
    stmt           go to state 24
    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 27
    identifier     go to state 28
    decl           go to state 29
    func_stmt      go to state 30
    proc_stmt      go to state 31
    znach_value    go to state 32
    array_type     go to state 33
    atomic_type    go to state 34
    print_list     go to state 35
    read_list      go to state 36


state 160

   47 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' . ENDL NACH stmt_list KON ENDL

    ENDL  shift, and go to state 170


state 161

   63 dimensions: dimensions ',' INT_CONST ':' . INT_CONST
   65           | dimensions ',' INT_CONST ':' . identifier

    INT_CONST  shift, and go to state 171
    ID         shift, and go to state 5

    identifier  go to state 172


state 162

   64 dimensions: dimensions ',' identifier ':' . identifier
   66           | dimensions ',' identifier ':' . INT_CONST

    INT_CONST  shift, and go to state 173
    ID         shift, and go to state 5

    identifier  go to state 174


state 163

   44 enum_array_identifiers: enum_array_identifiers ',' identifier '[' dimensions ']' .
   45                       | enum_array_identifiers ',' identifier '[' dimensions ']' . '\n'

    '\n'  shift, and go to state 175

    $default  reduce using rule 44 (enum_array_identifiers)


state 164

   48 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list KON ENDL .

    $default  reduce using rule 48 (proc_stmt)


state 165

   56 arg_value: ARG SPACE array_type SPACE identifier . '[' dimensions ']'

    '['  shift, and go to state 176


state 166

   55 arg_value: ARG SPACE atomic_type SPACE identifier .

    $default  reduce using rule 55 (arg_value)


state 167

   57 rez_value: REZ SPACE array_type identifier '[' . dimensions ']'

    INT_CONST  shift, and go to state 114
    ID         shift, and go to state 5

    identifier  go to state 115
    dimensions  go to state 177


state 168

   49 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL . stmt_list KON ENDL

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    ALG           shift, and go to state 6
    VVOD          shift, and go to state 7
    VESCH         shift, and go to state 8
    VESCHTAB      shift, and go to state 9
    VYVOD         shift, and go to state 10
    ZNACH         shift, and go to state 11
    LIT           shift, and go to state 12
    LITTAB        shift, and go to state 13
    LOG           shift, and go to state 14
    LOGTAB        shift, and go to state 15
    SIM           shift, and go to state 16
    SIMTAB        shift, and go to state 17
    CEL           shift, and go to state 18
    CELTAB        shift, and go to state 19
    ENDL          shift, and go to state 20
    '('           shift, and go to state 21

    stmt_list      go to state 178
    stmt           go to state 24
    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 27
    identifier     go to state 28
    decl           go to state 29
    func_stmt      go to state 30
    proc_stmt      go to state 31
    znach_value    go to state 32
    array_type     go to state 33
    atomic_type    go to state 34
    print_list     go to state 35
    read_list      go to state 36


state 169

    3 stmt_list: stmt_list . stmt
   46 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list . ENDL KON ENDL

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    ALG           shift, and go to state 6
    VVOD          shift, and go to state 7
    VESCH         shift, and go to state 8
    VESCHTAB      shift, and go to state 9
    VYVOD         shift, and go to state 10
    ZNACH         shift, and go to state 11
    LIT           shift, and go to state 12
    LITTAB        shift, and go to state 13
    LOG           shift, and go to state 14
    LOGTAB        shift, and go to state 15
    SIM           shift, and go to state 16
    SIMTAB        shift, and go to state 17
    CEL           shift, and go to state 18
    CELTAB        shift, and go to state 19
    ENDL          shift, and go to state 179
    '('           shift, and go to state 21

    stmt           go to state 46
    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 27
    identifier     go to state 28
    decl           go to state 29
    func_stmt      go to state 30
    proc_stmt      go to state 31
    znach_value    go to state 32
    array_type     go to state 33
    atomic_type    go to state 34
    print_list     go to state 35
    read_list      go to state 36


state 170

   47 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL . NACH stmt_list KON ENDL

    NACH  shift, and go to state 180


state 171

   63 dimensions: dimensions ',' INT_CONST ':' INT_CONST .

    $default  reduce using rule 63 (dimensions)


state 172

   65 dimensions: dimensions ',' INT_CONST ':' identifier .

    $default  reduce using rule 65 (dimensions)


state 173

   66 dimensions: dimensions ',' identifier ':' INT_CONST .

    $default  reduce using rule 66 (dimensions)


state 174

   64 dimensions: dimensions ',' identifier ':' identifier .

    $default  reduce using rule 64 (dimensions)


state 175

   45 enum_array_identifiers: enum_array_identifiers ',' identifier '[' dimensions ']' '\n' .

    $default  reduce using rule 45 (enum_array_identifiers)


state 176

   56 arg_value: ARG SPACE array_type SPACE identifier '[' . dimensions ']'

    INT_CONST  shift, and go to state 114
    ID         shift, and go to state 5

    identifier  go to state 115
    dimensions  go to state 181


state 177

   57 rez_value: REZ SPACE array_type identifier '[' dimensions . ']'
   63 dimensions: dimensions . ',' INT_CONST ':' INT_CONST
   64           | dimensions . ',' identifier ':' identifier
   65           | dimensions . ',' INT_CONST ':' identifier
   66           | dimensions . ',' identifier ':' INT_CONST

    ']'  shift, and go to state 182
    ','  shift, and go to state 131


state 178

    3 stmt_list: stmt_list . stmt
   49 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list . KON ENDL

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    ALG           shift, and go to state 6
    VVOD          shift, and go to state 7
    VESCH         shift, and go to state 8
    VESCHTAB      shift, and go to state 9
    VYVOD         shift, and go to state 10
    ZNACH         shift, and go to state 11
    KON           shift, and go to state 183
    LIT           shift, and go to state 12
    LITTAB        shift, and go to state 13
    LOG           shift, and go to state 14
    LOGTAB        shift, and go to state 15
    SIM           shift, and go to state 16
    SIMTAB        shift, and go to state 17
    CEL           shift, and go to state 18
    CELTAB        shift, and go to state 19
    ENDL          shift, and go to state 20
    '('           shift, and go to state 21

    stmt           go to state 46
    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 27
    identifier     go to state 28
    decl           go to state 29
    func_stmt      go to state 30
    proc_stmt      go to state 31
    znach_value    go to state 32
    array_type     go to state 33
    atomic_type    go to state 34
    print_list     go to state 35
    read_list      go to state 36


state 179

    4 stmt: ENDL .
   46 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL . KON ENDL

    KON  shift, and go to state 184

    $default  reduce using rule 4 (stmt)


state 180

   47 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH . stmt_list KON ENDL

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    ALG           shift, and go to state 6
    VVOD          shift, and go to state 7
    VESCH         shift, and go to state 8
    VESCHTAB      shift, and go to state 9
    VYVOD         shift, and go to state 10
    ZNACH         shift, and go to state 11
    LIT           shift, and go to state 12
    LITTAB        shift, and go to state 13
    LOG           shift, and go to state 14
    LOGTAB        shift, and go to state 15
    SIM           shift, and go to state 16
    SIMTAB        shift, and go to state 17
    CEL           shift, and go to state 18
    CELTAB        shift, and go to state 19
    ENDL          shift, and go to state 20
    '('           shift, and go to state 21

    stmt_list      go to state 185
    stmt           go to state 24
    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 27
    identifier     go to state 28
    decl           go to state 29
    func_stmt      go to state 30
    proc_stmt      go to state 31
    znach_value    go to state 32
    array_type     go to state 33
    atomic_type    go to state 34
    print_list     go to state 35
    read_list      go to state 36


state 181

   56 arg_value: ARG SPACE array_type SPACE identifier '[' dimensions . ']'
   63 dimensions: dimensions . ',' INT_CONST ':' INT_CONST
   64           | dimensions . ',' identifier ':' identifier
   65           | dimensions . ',' INT_CONST ':' identifier
   66           | dimensions . ',' identifier ':' INT_CONST

    ']'  shift, and go to state 186
    ','  shift, and go to state 131


state 182

   57 rez_value: REZ SPACE array_type identifier '[' dimensions ']' .

    $default  reduce using rule 57 (rez_value)


state 183

   49 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON . ENDL

    ENDL  shift, and go to state 187


state 184

   46 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL KON . ENDL

    ENDL  shift, and go to state 188


state 185

    3 stmt_list: stmt_list . stmt
   47 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list . KON ENDL

    INT_CONST     shift, and go to state 1
    STRING_CONST  shift, and go to state 2
    DOUBLE_CONST  shift, and go to state 3
    CHAR_CONST    shift, and go to state 4
    ID            shift, and go to state 5
    ALG           shift, and go to state 6
    VVOD          shift, and go to state 7
    VESCH         shift, and go to state 8
    VESCHTAB      shift, and go to state 9
    VYVOD         shift, and go to state 10
    ZNACH         shift, and go to state 11
    KON           shift, and go to state 189
    LIT           shift, and go to state 12
    LITTAB        shift, and go to state 13
    LOG           shift, and go to state 14
    LOGTAB        shift, and go to state 15
    SIM           shift, and go to state 16
    SIMTAB        shift, and go to state 17
    CEL           shift, and go to state 18
    CELTAB        shift, and go to state 19
    ENDL          shift, and go to state 20
    '('           shift, and go to state 21

    stmt           go to state 46
    expr           go to state 25
    function_call  go to state 26
    expr_list      go to state 27
    identifier     go to state 28
    decl           go to state 29
    func_stmt      go to state 30
    proc_stmt      go to state 31
    znach_value    go to state 32
    array_type     go to state 33
    atomic_type    go to state 34
    print_list     go to state 35
    read_list      go to state 36


state 186

   56 arg_value: ARG SPACE array_type SPACE identifier '[' dimensions ']' .

    $default  reduce using rule 56 (arg_value)


state 187

   49 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL .

    $default  reduce using rule 49 (proc_stmt)


state 188

   46 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list ENDL KON ENDL .

    $default  reduce using rule 46 (func_stmt)


state 189

   47 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON . ENDL

    ENDL  shift, and go to state 190


state 190

   47 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL .

    $default  reduce using rule 47 (func_stmt)
