Terminals unused in grammar

   NS
   BOGUS


Grammar

    0 $accept: program $end

    1 program: stmt_list EOF

    2 stmt_list: stmt
    3          | stmt_list stmt

    4 stmt: ENDL
    5     | expr_list ENDL
    6     | func_stmt
    7     | proc_stmt
    8     | print
    9     | read
   10     | znach_value
   11     | decl

   12 expr: function_call
   13     | identifier '[' expr_list ']'
   14     | identifier
   15     | '(' expr ')'
   16     | INT_CONST
   17     | CHAR_CONST
   18     | STRING_CONST
   19     | DOUBLE_CONST
   20     | BOOL_CONST
   21     | expr ASSMNT expr
   22     | expr PLUS expr
   23     | expr MINUS expr
   24     | expr MUL expr
   25     | expr DIV expr
   26     | expr POW expr
   27     | expr GT expr
   28     | expr LT expr
   29     | expr GTEQ expr
   30     | expr LTEQ expr
   31     | expr NEQ expr
   32     | expr EQ expr
   33     | NET
   34     | DA
   35     | MINUS expr

   36 function_call: identifier '(' expr_list ')'

   37 expr_list: expr
   38          | expr_list ',' expr

   39 identifier: ID

   40 decl: atomic_type SPACE enum_atomic_identifier_list ENDL
   41     | array_type SPACE enum_array_identifier_list ENDL

   42 enum_atomic_identifier_list: identifier
   43                            | enum_atomic_identifier_list ',' identifier
   44                            | enum_atomic_identifier_list SPACE ',' identifier
   45                            | enum_atomic_identifier_list ',' SPACE identifier
   46                            | enum_atomic_identifier_list SPACE ',' SPACE identifier

   47 enum_array_identifier_list: identifier '[' dimensions ']'
   48                           | enum_array_identifier_list ',' identifier '[' dimensions ']'

   49 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list KON ENDL
   50          | ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

   51 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list KON ENDL
   52          | ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

   53 param_list: param
   54           | param_list ';' param

   55 znach_value: ZNACH ASSMNT expr ENDL

   56 param: arg_value
   57      | rez_value

   58 arg_value: ARG SPACE atomic_type SPACE enum_atomic_identifier_list
   59          | ARG SPACE array_type SPACE enum_array_identifier_list

   60 rez_value: REZ SPACE array_type SPACE enum_array_identifier_list
   61          | REZ SPACE atomic_type SPACE enum_atomic_identifier_list

   62 dimensions: INT_CONST ':' INT_CONST
   63           | INT_CONST ':' identifier
   64           | dimensions ',' INT_CONST ':' INT_CONST
   65           | dimensions ',' INT_CONST ':' identifier

   66 array_type: CELTAB
   67           | VESCHTAB
   68           | SIMTAB
   69           | LITTAB
   70           | LOGTAB

   71 atomic_type: CEL
   72            | VESCH
   73            | SIM
   74            | LIT
   75            | LOG

   76 print: VYVOD SPACE expr_list ENDL

   77 read: VVOD SPACE expr_list ENDL


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 36 50 52
')' (41) 15 36 50 52
',' (44) 38 43 44 45 46 48 64 65
':' (58) 62 63 64 65
';' (59) 54
'[' (91) 13 47 48
']' (93) 13 47 48
error (256)
BOOL_CONST (258) 20
INT_CONST (259) 16 62 63 64 65
STRING_CONST (260) 18
DOUBLE_CONST (261) 19
CHAR_CONST (262) 17
ID (263) 39
ALG (264) 49 50 51 52
ARG (265) 58 59
VVOD (266) 77
VESCH (267) 72
VESCHTAB (268) 67
VYVOD (269) 76
DA (270) 34
ZNACH (271) 55
KON (272) 49 50 51 52
LIT (273) 74
LITTAB (274) 69
LOG (275) 75
LOGTAB (276) 70
NACH (277) 49 50 51 52
NET (278) 33
NS (279)
REZ (280) 60 61
SIM (281) 73
SIMTAB (282) 68
CEL (283) 71
CELTAB (284) 66
ENDL (285) 4 5 40 41 49 50 51 52 55 76 77
SPACE (286) 40 41 44 45 46 49 50 51 52 58 59 60 61 76 77
BOGUS (287)
EOF (288) 1
ASSMNT (289) 21 55
EQ (290) 32
NEQ (291) 31
LTEQ (292) 30
GTEQ (293) 29
LT (294) 28
GT (295) 27
MINUS (296) 23 35
PLUS (297) 22
DIV (298) 25
MUL (299) 24
POW (300) 26
UMINUS (301)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
stmt_list (56)
    on left: 2 3, on right: 1 3 49 50 51 52
stmt (57)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
expr (58)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    30 31 32 33 34 35, on right: 15 21 22 23 24 25 26 27 28 29 30 31
    32 35 37 38 55
function_call (59)
    on left: 36, on right: 12
expr_list (60)
    on left: 37 38, on right: 5 13 36 38 76 77
identifier (61)
    on left: 39, on right: 13 14 36 42 43 44 45 46 47 48 49 50 51 52
    63 65
decl (62)
    on left: 40 41, on right: 11
enum_atomic_identifier_list (63)
    on left: 42 43 44 45 46, on right: 40 43 44 45 46 58 61
enum_array_identifier_list (64)
    on left: 47 48, on right: 41 48 59 60
func_stmt (65)
    on left: 49 50, on right: 6
proc_stmt (66)
    on left: 51 52, on right: 7
param_list (67)
    on left: 53 54, on right: 50 52 54
znach_value (68)
    on left: 55, on right: 10
param (69)
    on left: 56 57, on right: 53 54
arg_value (70)
    on left: 58 59, on right: 56
rez_value (71)
    on left: 60 61, on right: 57
dimensions (72)
    on left: 62 63 64 65, on right: 47 48 64 65
array_type (73)
    on left: 66 67 68 69 70, on right: 41 59 60
atomic_type (74)
    on left: 71 72 73 74 75, on right: 40 49 50 58 61
print (75)
    on left: 76, on right: 8
read (76)
    on left: 77, on right: 9


state 0

    0 $accept: . program $end

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    program        go to state 26
    stmt_list      go to state 27
    stmt           go to state 28
    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 31
    identifier     go to state 32
    decl           go to state 33
    func_stmt      go to state 34
    proc_stmt      go to state 35
    znach_value    go to state 36
    array_type     go to state 37
    atomic_type    go to state 38
    print          go to state 39
    read           go to state 40


state 1

   20 expr: BOOL_CONST .

    $default  reduce using rule 20 (expr)


state 2

   16 expr: INT_CONST .

    $default  reduce using rule 16 (expr)


state 3

   18 expr: STRING_CONST .

    $default  reduce using rule 18 (expr)


state 4

   19 expr: DOUBLE_CONST .

    $default  reduce using rule 19 (expr)


state 5

   17 expr: CHAR_CONST .

    $default  reduce using rule 17 (expr)


state 6

   39 identifier: ID .

    $default  reduce using rule 39 (identifier)


state 7

   49 func_stmt: ALG . SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list KON ENDL
   50          | ALG . SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL
   51 proc_stmt: ALG . SPACE identifier ENDL NACH ENDL stmt_list KON ENDL
   52          | ALG . SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    SPACE  shift, and go to state 41


state 8

   77 read: VVOD . SPACE expr_list ENDL

    SPACE  shift, and go to state 42


state 9

   72 atomic_type: VESCH .

    $default  reduce using rule 72 (atomic_type)


state 10

   67 array_type: VESCHTAB .

    $default  reduce using rule 67 (array_type)


state 11

   76 print: VYVOD . SPACE expr_list ENDL

    SPACE  shift, and go to state 43


state 12

   34 expr: DA .

    $default  reduce using rule 34 (expr)


state 13

   55 znach_value: ZNACH . ASSMNT expr ENDL

    ASSMNT  shift, and go to state 44


state 14

   74 atomic_type: LIT .

    $default  reduce using rule 74 (atomic_type)


state 15

   69 array_type: LITTAB .

    $default  reduce using rule 69 (array_type)


state 16

   75 atomic_type: LOG .

    $default  reduce using rule 75 (atomic_type)


state 17

   70 array_type: LOGTAB .

    $default  reduce using rule 70 (array_type)


state 18

   33 expr: NET .

    $default  reduce using rule 33 (expr)


state 19

   73 atomic_type: SIM .

    $default  reduce using rule 73 (atomic_type)


state 20

   68 array_type: SIMTAB .

    $default  reduce using rule 68 (array_type)


state 21

   71 atomic_type: CEL .

    $default  reduce using rule 71 (atomic_type)


state 22

   66 array_type: CELTAB .

    $default  reduce using rule 66 (array_type)


state 23

    4 stmt: ENDL .

    $default  reduce using rule 4 (stmt)


state 24

   35 expr: MINUS . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 45
    function_call  go to state 30
    identifier     go to state 32


state 25

   15 expr: '(' . expr ')'

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 46
    function_call  go to state 30
    identifier     go to state 32


state 26

    0 $accept: program . $end

    $end  shift, and go to state 47


state 27

    1 program: stmt_list . EOF
    3 stmt_list: stmt_list . stmt

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    EOF           shift, and go to state 48
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    stmt           go to state 49
    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 31
    identifier     go to state 32
    decl           go to state 33
    func_stmt      go to state 34
    proc_stmt      go to state 35
    znach_value    go to state 36
    array_type     go to state 37
    atomic_type    go to state 38
    print          go to state 39
    read           go to state 40


state 28

    2 stmt_list: stmt .

    $default  reduce using rule 2 (stmt_list)


state 29

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   37 expr_list: expr .

    ASSMNT  shift, and go to state 50
    EQ      shift, and go to state 51
    NEQ     shift, and go to state 52
    LTEQ    shift, and go to state 53
    GTEQ    shift, and go to state 54
    LT      shift, and go to state 55
    GT      shift, and go to state 56
    MINUS   shift, and go to state 57
    PLUS    shift, and go to state 58
    DIV     shift, and go to state 59
    MUL     shift, and go to state 60
    POW     shift, and go to state 61

    $default  reduce using rule 37 (expr_list)


state 30

   12 expr: function_call .

    $default  reduce using rule 12 (expr)


state 31

    5 stmt: expr_list . ENDL
   38 expr_list: expr_list . ',' expr

    ENDL  shift, and go to state 62
    ','   shift, and go to state 63


state 32

   13 expr: identifier . '[' expr_list ']'
   14     | identifier .
   36 function_call: identifier . '(' expr_list ')'

    '['  shift, and go to state 64
    '('  shift, and go to state 65

    $default  reduce using rule 14 (expr)


state 33

   11 stmt: decl .

    $default  reduce using rule 11 (stmt)


state 34

    6 stmt: func_stmt .

    $default  reduce using rule 6 (stmt)


state 35

    7 stmt: proc_stmt .

    $default  reduce using rule 7 (stmt)


state 36

   10 stmt: znach_value .

    $default  reduce using rule 10 (stmt)


state 37

   41 decl: array_type . SPACE enum_array_identifier_list ENDL

    SPACE  shift, and go to state 66


state 38

   40 decl: atomic_type . SPACE enum_atomic_identifier_list ENDL

    SPACE  shift, and go to state 67


state 39

    8 stmt: print .

    $default  reduce using rule 8 (stmt)


state 40

    9 stmt: read .

    $default  reduce using rule 9 (stmt)


state 41

   49 func_stmt: ALG SPACE . atomic_type SPACE identifier ENDL NACH ENDL stmt_list KON ENDL
   50          | ALG SPACE . atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL
   51 proc_stmt: ALG SPACE . identifier ENDL NACH ENDL stmt_list KON ENDL
   52          | ALG SPACE . identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ID     shift, and go to state 6
    VESCH  shift, and go to state 9
    LIT    shift, and go to state 14
    LOG    shift, and go to state 16
    SIM    shift, and go to state 19
    CEL    shift, and go to state 21

    identifier   go to state 68
    atomic_type  go to state 69


state 42

   77 read: VVOD SPACE . expr_list ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 70
    identifier     go to state 32


state 43

   76 print: VYVOD SPACE . expr_list ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 71
    identifier     go to state 32


state 44

   55 znach_value: ZNACH ASSMNT . expr ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 72
    function_call  go to state 30
    identifier     go to state 32


state 45

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   35     | MINUS expr .

    $default  reduce using rule 35 (expr)


state 46

   15 expr: '(' expr . ')'
   21     | expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    ASSMNT  shift, and go to state 50
    EQ      shift, and go to state 51
    NEQ     shift, and go to state 52
    LTEQ    shift, and go to state 53
    GTEQ    shift, and go to state 54
    LT      shift, and go to state 55
    GT      shift, and go to state 56
    MINUS   shift, and go to state 57
    PLUS    shift, and go to state 58
    DIV     shift, and go to state 59
    MUL     shift, and go to state 60
    POW     shift, and go to state 61
    ')'     shift, and go to state 73


state 47

    0 $accept: program $end .

    $default  accept


state 48

    1 program: stmt_list EOF .

    $default  reduce using rule 1 (program)


state 49

    3 stmt_list: stmt_list stmt .

    $default  reduce using rule 3 (stmt_list)


state 50

   21 expr: expr ASSMNT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 74
    function_call  go to state 30
    identifier     go to state 32


state 51

   32 expr: expr EQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 75
    function_call  go to state 30
    identifier     go to state 32


state 52

   31 expr: expr NEQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 76
    function_call  go to state 30
    identifier     go to state 32


state 53

   30 expr: expr LTEQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 77
    function_call  go to state 30
    identifier     go to state 32


state 54

   29 expr: expr GTEQ . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 78
    function_call  go to state 30
    identifier     go to state 32


state 55

   28 expr: expr LT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 79
    function_call  go to state 30
    identifier     go to state 32


state 56

   27 expr: expr GT . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 80
    function_call  go to state 30
    identifier     go to state 32


state 57

   23 expr: expr MINUS . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 81
    function_call  go to state 30
    identifier     go to state 32


state 58

   22 expr: expr PLUS . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 82
    function_call  go to state 30
    identifier     go to state 32


state 59

   25 expr: expr DIV . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 83
    function_call  go to state 30
    identifier     go to state 32


state 60

   24 expr: expr MUL . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 84
    function_call  go to state 30
    identifier     go to state 32


state 61

   26 expr: expr POW . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 85
    function_call  go to state 30
    identifier     go to state 32


state 62

    5 stmt: expr_list ENDL .

    $default  reduce using rule 5 (stmt)


state 63

   38 expr_list: expr_list ',' . expr

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 86
    function_call  go to state 30
    identifier     go to state 32


state 64

   13 expr: identifier '[' . expr_list ']'

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 87
    identifier     go to state 32


state 65

   36 function_call: identifier '(' . expr_list ')'

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    DA            shift, and go to state 12
    NET           shift, and go to state 18
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 88
    identifier     go to state 32


state 66

   41 decl: array_type SPACE . enum_array_identifier_list ENDL

    ID  shift, and go to state 6

    identifier                  go to state 89
    enum_array_identifier_list  go to state 90


state 67

   40 decl: atomic_type SPACE . enum_atomic_identifier_list ENDL

    ID  shift, and go to state 6

    identifier                   go to state 91
    enum_atomic_identifier_list  go to state 92


state 68

   51 proc_stmt: ALG SPACE identifier . ENDL NACH ENDL stmt_list KON ENDL
   52          | ALG SPACE identifier . '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 93
    '('   shift, and go to state 94


state 69

   49 func_stmt: ALG SPACE atomic_type . SPACE identifier ENDL NACH ENDL stmt_list KON ENDL
   50          | ALG SPACE atomic_type . SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

    SPACE  shift, and go to state 95


state 70

   38 expr_list: expr_list . ',' expr
   77 read: VVOD SPACE expr_list . ENDL

    ENDL  shift, and go to state 96
    ','   shift, and go to state 63


state 71

   38 expr_list: expr_list . ',' expr
   76 print: VYVOD SPACE expr_list . ENDL

    ENDL  shift, and go to state 97
    ','   shift, and go to state 63


state 72

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   55 znach_value: ZNACH ASSMNT expr . ENDL

    ENDL    shift, and go to state 98
    ASSMNT  shift, and go to state 50
    EQ      shift, and go to state 51
    NEQ     shift, and go to state 52
    LTEQ    shift, and go to state 53
    GTEQ    shift, and go to state 54
    LT      shift, and go to state 55
    GT      shift, and go to state 56
    MINUS   shift, and go to state 57
    PLUS    shift, and go to state 58
    DIV     shift, and go to state 59
    MUL     shift, and go to state 60
    POW     shift, and go to state 61


state 73

   15 expr: '(' expr ')' .

    $default  reduce using rule 15 (expr)


state 74

   21 expr: expr . ASSMNT expr
   21     | expr ASSMNT expr .
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    ASSMNT  shift, and go to state 50
    EQ      shift, and go to state 51
    NEQ     shift, and go to state 52
    LTEQ    shift, and go to state 53
    GTEQ    shift, and go to state 54
    LT      shift, and go to state 55
    GT      shift, and go to state 56
    MINUS   shift, and go to state 57
    PLUS    shift, and go to state 58
    DIV     shift, and go to state 59
    MUL     shift, and go to state 60
    POW     shift, and go to state 61

    $default  reduce using rule 21 (expr)


state 75

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   32     | expr EQ expr .

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    DIV    shift, and go to state 59
    MUL    shift, and go to state 60
    POW    shift, and go to state 61

    $default  reduce using rule 32 (expr)


state 76

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   31     | expr NEQ expr .
   32     | expr . EQ expr

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    DIV    shift, and go to state 59
    MUL    shift, and go to state 60
    POW    shift, and go to state 61

    $default  reduce using rule 31 (expr)


state 77

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   30     | expr LTEQ expr .
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    DIV    shift, and go to state 59
    MUL    shift, and go to state 60
    POW    shift, and go to state 61

    $default  reduce using rule 30 (expr)


state 78

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   29     | expr GTEQ expr .
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    DIV    shift, and go to state 59
    MUL    shift, and go to state 60
    POW    shift, and go to state 61

    $default  reduce using rule 29 (expr)


state 79

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   28     | expr LT expr .
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    DIV    shift, and go to state 59
    MUL    shift, and go to state 60
    POW    shift, and go to state 61

    $default  reduce using rule 28 (expr)


state 80

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   27     | expr GT expr .
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    DIV    shift, and go to state 59
    MUL    shift, and go to state 60
    POW    shift, and go to state 61

    $default  reduce using rule 27 (expr)


state 81

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   23     | expr MINUS expr .
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    DIV  shift, and go to state 59
    MUL  shift, and go to state 60
    POW  shift, and go to state 61

    $default  reduce using rule 23 (expr)


state 82

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   22     | expr PLUS expr .
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    DIV  shift, and go to state 59
    MUL  shift, and go to state 60
    POW  shift, and go to state 61

    $default  reduce using rule 22 (expr)


state 83

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   25     | expr DIV expr .
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    POW  shift, and go to state 61

    $default  reduce using rule 25 (expr)


state 84

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   24     | expr MUL expr .
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    POW  shift, and go to state 61

    $default  reduce using rule 24 (expr)


state 85

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   26     | expr POW expr .
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr

    $default  reduce using rule 26 (expr)


state 86

   21 expr: expr . ASSMNT expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . POW expr
   27     | expr . GT expr
   28     | expr . LT expr
   29     | expr . GTEQ expr
   30     | expr . LTEQ expr
   31     | expr . NEQ expr
   32     | expr . EQ expr
   38 expr_list: expr_list ',' expr .

    ASSMNT  shift, and go to state 50
    EQ      shift, and go to state 51
    NEQ     shift, and go to state 52
    LTEQ    shift, and go to state 53
    GTEQ    shift, and go to state 54
    LT      shift, and go to state 55
    GT      shift, and go to state 56
    MINUS   shift, and go to state 57
    PLUS    shift, and go to state 58
    DIV     shift, and go to state 59
    MUL     shift, and go to state 60
    POW     shift, and go to state 61

    $default  reduce using rule 38 (expr_list)


state 87

   13 expr: identifier '[' expr_list . ']'
   38 expr_list: expr_list . ',' expr

    ']'  shift, and go to state 99
    ','  shift, and go to state 63


state 88

   36 function_call: identifier '(' expr_list . ')'
   38 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 100
    ','  shift, and go to state 63


state 89

   47 enum_array_identifier_list: identifier . '[' dimensions ']'

    '['  shift, and go to state 101


state 90

   41 decl: array_type SPACE enum_array_identifier_list . ENDL
   48 enum_array_identifier_list: enum_array_identifier_list . ',' identifier '[' dimensions ']'

    ENDL  shift, and go to state 102
    ','   shift, and go to state 103


state 91

   42 enum_atomic_identifier_list: identifier .

    $default  reduce using rule 42 (enum_atomic_identifier_list)


state 92

   40 decl: atomic_type SPACE enum_atomic_identifier_list . ENDL
   43 enum_atomic_identifier_list: enum_atomic_identifier_list . ',' identifier
   44                            | enum_atomic_identifier_list . SPACE ',' identifier
   45                            | enum_atomic_identifier_list . ',' SPACE identifier
   46                            | enum_atomic_identifier_list . SPACE ',' SPACE identifier

    ENDL   shift, and go to state 104
    SPACE  shift, and go to state 105
    ','    shift, and go to state 106


state 93

   51 proc_stmt: ALG SPACE identifier ENDL . NACH ENDL stmt_list KON ENDL

    NACH  shift, and go to state 107


state 94

   52 proc_stmt: ALG SPACE identifier '(' . param_list ')' ENDL NACH ENDL stmt_list KON ENDL

    ARG  shift, and go to state 108
    REZ  shift, and go to state 109

    param_list  go to state 110
    param       go to state 111
    arg_value   go to state 112
    rez_value   go to state 113


state 95

   49 func_stmt: ALG SPACE atomic_type SPACE . identifier ENDL NACH ENDL stmt_list KON ENDL
   50          | ALG SPACE atomic_type SPACE . identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL

    ID  shift, and go to state 6

    identifier  go to state 114


state 96

   77 read: VVOD SPACE expr_list ENDL .

    $default  reduce using rule 77 (read)


state 97

   76 print: VYVOD SPACE expr_list ENDL .

    $default  reduce using rule 76 (print)


state 98

   55 znach_value: ZNACH ASSMNT expr ENDL .

    $default  reduce using rule 55 (znach_value)


state 99

   13 expr: identifier '[' expr_list ']' .

    $default  reduce using rule 13 (expr)


state 100

   36 function_call: identifier '(' expr_list ')' .

    $default  reduce using rule 36 (function_call)


state 101

   47 enum_array_identifier_list: identifier '[' . dimensions ']'

    INT_CONST  shift, and go to state 115

    dimensions  go to state 116


state 102

   41 decl: array_type SPACE enum_array_identifier_list ENDL .

    $default  reduce using rule 41 (decl)


state 103

   48 enum_array_identifier_list: enum_array_identifier_list ',' . identifier '[' dimensions ']'

    ID  shift, and go to state 6

    identifier  go to state 117


state 104

   40 decl: atomic_type SPACE enum_atomic_identifier_list ENDL .

    $default  reduce using rule 40 (decl)


state 105

   44 enum_atomic_identifier_list: enum_atomic_identifier_list SPACE . ',' identifier
   46                            | enum_atomic_identifier_list SPACE . ',' SPACE identifier

    ','  shift, and go to state 118


state 106

   43 enum_atomic_identifier_list: enum_atomic_identifier_list ',' . identifier
   45                            | enum_atomic_identifier_list ',' . SPACE identifier

    ID     shift, and go to state 6
    SPACE  shift, and go to state 119

    identifier  go to state 120


state 107

   51 proc_stmt: ALG SPACE identifier ENDL NACH . ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 121


state 108

   58 arg_value: ARG . SPACE atomic_type SPACE enum_atomic_identifier_list
   59          | ARG . SPACE array_type SPACE enum_array_identifier_list

    SPACE  shift, and go to state 122


state 109

   60 rez_value: REZ . SPACE array_type SPACE enum_array_identifier_list
   61          | REZ . SPACE atomic_type SPACE enum_atomic_identifier_list

    SPACE  shift, and go to state 123


state 110

   52 proc_stmt: ALG SPACE identifier '(' param_list . ')' ENDL NACH ENDL stmt_list KON ENDL
   54 param_list: param_list . ';' param

    ')'  shift, and go to state 124
    ';'  shift, and go to state 125


state 111

   53 param_list: param .

    $default  reduce using rule 53 (param_list)


state 112

   56 param: arg_value .

    $default  reduce using rule 56 (param)


state 113

   57 param: rez_value .

    $default  reduce using rule 57 (param)


state 114

   49 func_stmt: ALG SPACE atomic_type SPACE identifier . ENDL NACH ENDL stmt_list KON ENDL
   50          | ALG SPACE atomic_type SPACE identifier . '(' param_list ')' ENDL NACH stmt_list KON ENDL

    ENDL  shift, and go to state 126
    '('   shift, and go to state 127


state 115

   62 dimensions: INT_CONST . ':' INT_CONST
   63           | INT_CONST . ':' identifier

    ':'  shift, and go to state 128


state 116

   47 enum_array_identifier_list: identifier '[' dimensions . ']'
   64 dimensions: dimensions . ',' INT_CONST ':' INT_CONST
   65           | dimensions . ',' INT_CONST ':' identifier

    ']'  shift, and go to state 129
    ','  shift, and go to state 130


state 117

   48 enum_array_identifier_list: enum_array_identifier_list ',' identifier . '[' dimensions ']'

    '['  shift, and go to state 131


state 118

   44 enum_atomic_identifier_list: enum_atomic_identifier_list SPACE ',' . identifier
   46                            | enum_atomic_identifier_list SPACE ',' . SPACE identifier

    ID     shift, and go to state 6
    SPACE  shift, and go to state 132

    identifier  go to state 133


state 119

   45 enum_atomic_identifier_list: enum_atomic_identifier_list ',' SPACE . identifier

    ID  shift, and go to state 6

    identifier  go to state 134


state 120

   43 enum_atomic_identifier_list: enum_atomic_identifier_list ',' identifier .

    $default  reduce using rule 43 (enum_atomic_identifier_list)


state 121

   51 proc_stmt: ALG SPACE identifier ENDL NACH ENDL . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    stmt_list      go to state 135
    stmt           go to state 28
    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 31
    identifier     go to state 32
    decl           go to state 33
    func_stmt      go to state 34
    proc_stmt      go to state 35
    znach_value    go to state 36
    array_type     go to state 37
    atomic_type    go to state 38
    print          go to state 39
    read           go to state 40


state 122

   58 arg_value: ARG SPACE . atomic_type SPACE enum_atomic_identifier_list
   59          | ARG SPACE . array_type SPACE enum_array_identifier_list

    VESCH     shift, and go to state 9
    VESCHTAB  shift, and go to state 10
    LIT       shift, and go to state 14
    LITTAB    shift, and go to state 15
    LOG       shift, and go to state 16
    LOGTAB    shift, and go to state 17
    SIM       shift, and go to state 19
    SIMTAB    shift, and go to state 20
    CEL       shift, and go to state 21
    CELTAB    shift, and go to state 22

    array_type   go to state 136
    atomic_type  go to state 137


state 123

   60 rez_value: REZ SPACE . array_type SPACE enum_array_identifier_list
   61          | REZ SPACE . atomic_type SPACE enum_atomic_identifier_list

    VESCH     shift, and go to state 9
    VESCHTAB  shift, and go to state 10
    LIT       shift, and go to state 14
    LITTAB    shift, and go to state 15
    LOG       shift, and go to state 16
    LOGTAB    shift, and go to state 17
    SIM       shift, and go to state 19
    SIMTAB    shift, and go to state 20
    CEL       shift, and go to state 21
    CELTAB    shift, and go to state 22

    array_type   go to state 138
    atomic_type  go to state 139


state 124

   52 proc_stmt: ALG SPACE identifier '(' param_list ')' . ENDL NACH ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 140


state 125

   54 param_list: param_list ';' . param

    ARG  shift, and go to state 108
    REZ  shift, and go to state 109

    param      go to state 141
    arg_value  go to state 112
    rez_value  go to state 113


state 126

   49 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL . NACH ENDL stmt_list KON ENDL

    NACH  shift, and go to state 142


state 127

   50 func_stmt: ALG SPACE atomic_type SPACE identifier '(' . param_list ')' ENDL NACH stmt_list KON ENDL

    ARG  shift, and go to state 108
    REZ  shift, and go to state 109

    param_list  go to state 143
    param       go to state 111
    arg_value   go to state 112
    rez_value   go to state 113


state 128

   62 dimensions: INT_CONST ':' . INT_CONST
   63           | INT_CONST ':' . identifier

    INT_CONST  shift, and go to state 144
    ID         shift, and go to state 6

    identifier  go to state 145


state 129

   47 enum_array_identifier_list: identifier '[' dimensions ']' .

    $default  reduce using rule 47 (enum_array_identifier_list)


state 130

   64 dimensions: dimensions ',' . INT_CONST ':' INT_CONST
   65           | dimensions ',' . INT_CONST ':' identifier

    INT_CONST  shift, and go to state 146


state 131

   48 enum_array_identifier_list: enum_array_identifier_list ',' identifier '[' . dimensions ']'

    INT_CONST  shift, and go to state 115

    dimensions  go to state 147


state 132

   46 enum_atomic_identifier_list: enum_atomic_identifier_list SPACE ',' SPACE . identifier

    ID  shift, and go to state 6

    identifier  go to state 148


state 133

   44 enum_atomic_identifier_list: enum_atomic_identifier_list SPACE ',' identifier .

    $default  reduce using rule 44 (enum_atomic_identifier_list)


state 134

   45 enum_atomic_identifier_list: enum_atomic_identifier_list ',' SPACE identifier .

    $default  reduce using rule 45 (enum_atomic_identifier_list)


state 135

    3 stmt_list: stmt_list . stmt
   51 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 149
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    stmt           go to state 49
    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 31
    identifier     go to state 32
    decl           go to state 33
    func_stmt      go to state 34
    proc_stmt      go to state 35
    znach_value    go to state 36
    array_type     go to state 37
    atomic_type    go to state 38
    print          go to state 39
    read           go to state 40


state 136

   59 arg_value: ARG SPACE array_type . SPACE enum_array_identifier_list

    SPACE  shift, and go to state 150


state 137

   58 arg_value: ARG SPACE atomic_type . SPACE enum_atomic_identifier_list

    SPACE  shift, and go to state 151


state 138

   60 rez_value: REZ SPACE array_type . SPACE enum_array_identifier_list

    SPACE  shift, and go to state 152


state 139

   61 rez_value: REZ SPACE atomic_type . SPACE enum_atomic_identifier_list

    SPACE  shift, and go to state 153


state 140

   52 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL . NACH ENDL stmt_list KON ENDL

    NACH  shift, and go to state 154


state 141

   54 param_list: param_list ';' param .

    $default  reduce using rule 54 (param_list)


state 142

   49 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH . ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 155


state 143

   50 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list . ')' ENDL NACH stmt_list KON ENDL
   54 param_list: param_list . ';' param

    ')'  shift, and go to state 156
    ';'  shift, and go to state 125


state 144

   62 dimensions: INT_CONST ':' INT_CONST .

    $default  reduce using rule 62 (dimensions)


state 145

   63 dimensions: INT_CONST ':' identifier .

    $default  reduce using rule 63 (dimensions)


state 146

   64 dimensions: dimensions ',' INT_CONST . ':' INT_CONST
   65           | dimensions ',' INT_CONST . ':' identifier

    ':'  shift, and go to state 157


state 147

   48 enum_array_identifier_list: enum_array_identifier_list ',' identifier '[' dimensions . ']'
   64 dimensions: dimensions . ',' INT_CONST ':' INT_CONST
   65           | dimensions . ',' INT_CONST ':' identifier

    ']'  shift, and go to state 158
    ','  shift, and go to state 130


state 148

   46 enum_atomic_identifier_list: enum_atomic_identifier_list SPACE ',' SPACE identifier .

    $default  reduce using rule 46 (enum_atomic_identifier_list)


state 149

   51 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list KON . ENDL

    ENDL  shift, and go to state 159


state 150

   59 arg_value: ARG SPACE array_type SPACE . enum_array_identifier_list

    ID  shift, and go to state 6

    identifier                  go to state 89
    enum_array_identifier_list  go to state 160


state 151

   58 arg_value: ARG SPACE atomic_type SPACE . enum_atomic_identifier_list

    ID  shift, and go to state 6

    identifier                   go to state 91
    enum_atomic_identifier_list  go to state 161


state 152

   60 rez_value: REZ SPACE array_type SPACE . enum_array_identifier_list

    ID  shift, and go to state 6

    identifier                  go to state 89
    enum_array_identifier_list  go to state 162


state 153

   61 rez_value: REZ SPACE atomic_type SPACE . enum_atomic_identifier_list

    ID  shift, and go to state 6

    identifier                   go to state 91
    enum_atomic_identifier_list  go to state 163


state 154

   52 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH . ENDL stmt_list KON ENDL

    ENDL  shift, and go to state 164


state 155

   49 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    stmt_list      go to state 165
    stmt           go to state 28
    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 31
    identifier     go to state 32
    decl           go to state 33
    func_stmt      go to state 34
    proc_stmt      go to state 35
    znach_value    go to state 36
    array_type     go to state 37
    atomic_type    go to state 38
    print          go to state 39
    read           go to state 40


state 156

   50 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' . ENDL NACH stmt_list KON ENDL

    ENDL  shift, and go to state 166


state 157

   64 dimensions: dimensions ',' INT_CONST ':' . INT_CONST
   65           | dimensions ',' INT_CONST ':' . identifier

    INT_CONST  shift, and go to state 167
    ID         shift, and go to state 6

    identifier  go to state 168


state 158

   48 enum_array_identifier_list: enum_array_identifier_list ',' identifier '[' dimensions ']' .

    $default  reduce using rule 48 (enum_array_identifier_list)


state 159

   51 proc_stmt: ALG SPACE identifier ENDL NACH ENDL stmt_list KON ENDL .

    $default  reduce using rule 51 (proc_stmt)


state 160

   48 enum_array_identifier_list: enum_array_identifier_list . ',' identifier '[' dimensions ']'
   59 arg_value: ARG SPACE array_type SPACE enum_array_identifier_list .

    ','  shift, and go to state 103

    $default  reduce using rule 59 (arg_value)


state 161

   43 enum_atomic_identifier_list: enum_atomic_identifier_list . ',' identifier
   44                            | enum_atomic_identifier_list . SPACE ',' identifier
   45                            | enum_atomic_identifier_list . ',' SPACE identifier
   46                            | enum_atomic_identifier_list . SPACE ',' SPACE identifier
   58 arg_value: ARG SPACE atomic_type SPACE enum_atomic_identifier_list .

    SPACE  shift, and go to state 105
    ','    shift, and go to state 106

    $default  reduce using rule 58 (arg_value)


state 162

   48 enum_array_identifier_list: enum_array_identifier_list . ',' identifier '[' dimensions ']'
   60 rez_value: REZ SPACE array_type SPACE enum_array_identifier_list .

    ','  shift, and go to state 103

    $default  reduce using rule 60 (rez_value)


state 163

   43 enum_atomic_identifier_list: enum_atomic_identifier_list . ',' identifier
   44                            | enum_atomic_identifier_list . SPACE ',' identifier
   45                            | enum_atomic_identifier_list . ',' SPACE identifier
   46                            | enum_atomic_identifier_list . SPACE ',' SPACE identifier
   61 rez_value: REZ SPACE atomic_type SPACE enum_atomic_identifier_list .

    SPACE  shift, and go to state 105
    ','    shift, and go to state 106

    $default  reduce using rule 61 (rez_value)


state 164

   52 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    stmt_list      go to state 169
    stmt           go to state 28
    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 31
    identifier     go to state 32
    decl           go to state 33
    func_stmt      go to state 34
    proc_stmt      go to state 35
    znach_value    go to state 36
    array_type     go to state 37
    atomic_type    go to state 38
    print          go to state 39
    read           go to state 40


state 165

    3 stmt_list: stmt_list . stmt
   49 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 170
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    stmt           go to state 49
    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 31
    identifier     go to state 32
    decl           go to state 33
    func_stmt      go to state 34
    proc_stmt      go to state 35
    znach_value    go to state 36
    array_type     go to state 37
    atomic_type    go to state 38
    print          go to state 39
    read           go to state 40


state 166

   50 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL . NACH stmt_list KON ENDL

    NACH  shift, and go to state 171


state 167

   64 dimensions: dimensions ',' INT_CONST ':' INT_CONST .

    $default  reduce using rule 64 (dimensions)


state 168

   65 dimensions: dimensions ',' INT_CONST ':' identifier .

    $default  reduce using rule 65 (dimensions)


state 169

    3 stmt_list: stmt_list . stmt
   52 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 172
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    stmt           go to state 49
    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 31
    identifier     go to state 32
    decl           go to state 33
    func_stmt      go to state 34
    proc_stmt      go to state 35
    znach_value    go to state 36
    array_type     go to state 37
    atomic_type    go to state 38
    print          go to state 39
    read           go to state 40


state 170

   49 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list KON . ENDL

    ENDL  shift, and go to state 173


state 171

   50 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH . stmt_list KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    stmt_list      go to state 174
    stmt           go to state 28
    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 31
    identifier     go to state 32
    decl           go to state 33
    func_stmt      go to state 34
    proc_stmt      go to state 35
    znach_value    go to state 36
    array_type     go to state 37
    atomic_type    go to state 38
    print          go to state 39
    read           go to state 40


state 172

   52 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON . ENDL

    ENDL  shift, and go to state 175


state 173

   49 func_stmt: ALG SPACE atomic_type SPACE identifier ENDL NACH ENDL stmt_list KON ENDL .

    $default  reduce using rule 49 (func_stmt)


state 174

    3 stmt_list: stmt_list . stmt
   50 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list . KON ENDL

    BOOL_CONST    shift, and go to state 1
    INT_CONST     shift, and go to state 2
    STRING_CONST  shift, and go to state 3
    DOUBLE_CONST  shift, and go to state 4
    CHAR_CONST    shift, and go to state 5
    ID            shift, and go to state 6
    ALG           shift, and go to state 7
    VVOD          shift, and go to state 8
    VESCH         shift, and go to state 9
    VESCHTAB      shift, and go to state 10
    VYVOD         shift, and go to state 11
    DA            shift, and go to state 12
    ZNACH         shift, and go to state 13
    KON           shift, and go to state 176
    LIT           shift, and go to state 14
    LITTAB        shift, and go to state 15
    LOG           shift, and go to state 16
    LOGTAB        shift, and go to state 17
    NET           shift, and go to state 18
    SIM           shift, and go to state 19
    SIMTAB        shift, and go to state 20
    CEL           shift, and go to state 21
    CELTAB        shift, and go to state 22
    ENDL          shift, and go to state 23
    MINUS         shift, and go to state 24
    '('           shift, and go to state 25

    stmt           go to state 49
    expr           go to state 29
    function_call  go to state 30
    expr_list      go to state 31
    identifier     go to state 32
    decl           go to state 33
    func_stmt      go to state 34
    proc_stmt      go to state 35
    znach_value    go to state 36
    array_type     go to state 37
    atomic_type    go to state 38
    print          go to state 39
    read           go to state 40


state 175

   52 proc_stmt: ALG SPACE identifier '(' param_list ')' ENDL NACH ENDL stmt_list KON ENDL .

    $default  reduce using rule 52 (proc_stmt)


state 176

   50 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON . ENDL

    ENDL  shift, and go to state 177


state 177

   50 func_stmt: ALG SPACE atomic_type SPACE identifier '(' param_list ')' ENDL NACH stmt_list KON ENDL .

    $default  reduce using rule 50 (func_stmt)
